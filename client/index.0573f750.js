import{S as e,i as t,s as n,e as r,t as a,c as i,a as s,b as o,d as c,f as l,g as p,h as m,n as u,j as f,k as d,l as h,m as y,o as v,p as g,r as b,q as $,u as x,v as O,w as I,x as S,y as E,z as w,A as j,B as P,C as A,D as k,E as T,F as C,G as N,H as R,I as q,J as M,K as D,L as V}from"./client.afbdb5a5.js";var L="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function _(e,t,n){return e(n={path:t,exports:{},require:function(e,t){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==t&&n.path)}},n.exports),n.exports}var J=_((function(e,t){!function(n,r){var a={};n.PubSub=a;var i=n.define;!function(e){var t={},n=-1,r="*";function a(e){var t;for(t in e)if(e.hasOwnProperty(t))return!0;return!1}function i(e){return function(){throw e}}function s(e,t,n){try{e(t,n)}catch(e){setTimeout(i(e),0)}}function o(e,t,n){e(t,n)}function c(e,n,r,a){var i,c=t[n],l=a?o:s;if(t.hasOwnProperty(n))for(i in c)c.hasOwnProperty(i)&&l(c[i],e,r)}function l(e,t,n){return function(){var a=String(e),i=a.lastIndexOf(".");for(c(e,e,t,n);-1!==i;)i=(a=a.substr(0,i)).lastIndexOf("."),c(e,a,t,n);c(e,r,t,n)}}function p(e){var n=String(e);return Boolean(t.hasOwnProperty(n)&&a(t[n]))}function m(e){for(var t=String(e),n=p(t)||p(r),a=t.lastIndexOf(".");!n&&-1!==a;)a=(t=t.substr(0,a)).lastIndexOf("."),n=p(t);return n}function u(e,t,n,r){var a=l(e="symbol"==typeof e?e.toString():e,t,r);return!!m(e)&&(!0===n?a():setTimeout(a,0),!0)}e.publish=function(t,n){return u(t,n,!1,e.immediateExceptions)},e.publishSync=function(t,n){return u(t,n,!0,e.immediateExceptions)},e.subscribe=function(e,r){if("function"!=typeof r)return!1;e="symbol"==typeof e?e.toString():e,t.hasOwnProperty(e)||(t[e]={});var a="uid_"+String(++n);return t[e][a]=r,a},e.subscribeAll=function(t){return e.subscribe(r,t)},e.subscribeOnce=function(t,n){var r=e.subscribe(t,(function(){e.unsubscribe(r),n.apply(this,arguments)}));return e},e.clearAllSubscriptions=function(){t={}},e.clearSubscriptions=function(e){var n;for(n in t)t.hasOwnProperty(n)&&0===n.indexOf(e)&&delete t[n]},e.countSubscriptions=function(e){var n,r=0;for(n in t)t.hasOwnProperty(n)&&0===n.indexOf(e)&&r++;return r},e.getSubscriptions=function(e){var n,r=[];for(n in t)t.hasOwnProperty(n)&&0===n.indexOf(e)&&r.push(n);return r},e.unsubscribe=function(n){var r,a,i,s=function(e){var n;for(n in t)if(t.hasOwnProperty(n)&&0===n.indexOf(e))return!0;return!1},o="string"==typeof n&&(t.hasOwnProperty(n)||s(n)),c=!o&&"string"==typeof n,l="function"==typeof n,p=!1;if(!o){for(r in t)if(t.hasOwnProperty(r)){if(a=t[r],c&&a[n]){delete a[n],p=n;break}if(l)for(i in a)a.hasOwnProperty(i)&&a[i]===n&&(delete a[i],p=!0)}return p}e.clearSubscriptions(n)}}(a),"function"==typeof i&&i.amd?i((function(){return a})):(void 0!==e&&e.exports&&(t=e.exports=a),t.PubSub=a,e.exports=t=a)}("object"==typeof window&&window||L)})),F=(J.PubSub,function(e,t){return function n(){null==t&&(t=e.length);var r=[].slice.call(arguments);return r.length>=t?e.apply(this,r):function(){return n.apply(this,r.concat([].slice.call(arguments)))}}});const z=e=>{if(e.length>0&&"/"!==e[0])throw Error("Invalid JSON Pointer");return e.split("/").slice(1).map(W)},B=(e,t,n,r)=>{if(0===e.length)return n;if(e.length>1){const a=e.shift();return{...t,[a]:B(e,Q(t,a,r),n,K(a,r))}}if(Array.isArray(t)){const r=[...t];return r[Z(t,e[0])]=n,r}return"object"==typeof t&&null!==t?{...t,[e[0]]:n}:Q(t,e[0],r)},G=(e,t,n,r)=>{if(0!==e.length)if(1!==e.length||Y(t)){const a=e.shift();G(e,Q(t,a,r),n,K(a,r))}else{t[Z(t,e[0])]=n}},X=(e,t,n)=>{if(0!=e.length){if(e.length>1){const r=e.shift(),a=Q(t,r,n);return{...t,[r]:X(e,a,K(r,n))}}if(Array.isArray(t))return t.filter((t,n)=>n!=e[0]);if("object"==typeof t&&null!==t){const{[e[0]]:n,...r}=t;return r}return Q(t,e[0],n)}},U=(e,t,n)=>{if(0!==e.length)if(e.length>1){const r=e.shift(),a=Q(t,r,n);U(e,a,K(r,n))}else Array.isArray(t)?t.splice(e[0],1):"object"==typeof t&&null!==t?delete t[e[0]]:Q(t,e[0],n)},K=F((e,t)=>t+"/"+H(e)),H=e=>e.toString().replace(/~/g,"~0").replace(/\//g,"~1"),W=e=>e.toString().replace(/~1/g,"/").replace(/~0/g,"~"),Z=(e,t)=>Array.isArray(e)&&"-"===t?e.length:t,Q=(e,t,n="")=>{if(void 0===e)throw TypeError(`Value at '${n}' is undefined and does not have property '${t}'`);if(null===e)throw TypeError(`Value at '${n}' is null and does not have property '${t}'`);if(Y(e))throw TypeError(`Value at '${n}' is a ${typeof e} and does not have property '${t}'`);return e[Z(e,t)]},Y=e=>null===e||"object"!=typeof e;var ee={nil:"",append:K,get:(e,t)=>{const n=z(e),r=e=>n.reduce(([e,t],n)=>[Q(e,n,t),K(n,t)],[e,""])[0];return void 0===t?r:r(t)},set:(e,t,n)=>{const r=z(e),a=F((e,t)=>B(r,e,t,""));return void 0===t?a:a(t,n)},assign:(e,t,n)=>{const r=z(e),a=F((e,t)=>G(r,e,t,""));return void 0===t?a:a(t,n)},unset:(e,t)=>{const n=z(e),r=e=>X(n,e,"");return void 0===t?r:r(t)},delete:(e,t)=>{const n=z(e),r=e=>U(n,e,"");return void 0===t?r:r(t)}};const te={null:e=>null===e,boolean:e=>"boolean"==typeof e,object:e=>"object"==typeof e&&!Array.isArray(e)&&null!==e,array:e=>Array.isArray(e),number:e=>"number"==typeof e,integer:e=>Number.isInteger(e),string:e=>"string"==typeof e};var ne={jsonTypeOf:(e,t)=>te[t](e),splitUrl:e=>{const t=e.indexOf("#"),n=-1===t?e.length:t,r=e.slice(0,n),a=e.slice(n+1);return[decodeURI(r),decodeURI(a)]}};const re=Symbol("$__value"),ae=Symbol("$__href"),ie=Symbol("$__isDynamic");var se=(e,t,n=!1)=>Object.freeze({[ae]:e,[re]:t,[ie]:n}),oe=e=>e&&void 0!==e[ae],ce=e=>e[ae],le=e=>e[re],pe=e=>e[ie];const{jsonTypeOf:me}=ne,ue=Object.freeze({id:"",pointer:"",instance:void 0,value:void 0}),fe=e=>oe(e.value)?le(e.value):e.value,de=F((e,t)=>me(fe(e),t)),he=(e,t)=>Object.freeze({...t,pointer:ee.append(e,t.pointer),value:fe(t)[e]}),ye=F((e,t)=>fe(t).map((n,r,a,i)=>e(he(r,t),r,a,i))),ve=F((e,t)=>fe(t).map((e,n,r,a)=>he(n,t)).filter((t,n,r,a)=>e(t,n,r,a))),ge=F((e,t,n)=>fe(n).reduce((t,r,a)=>e(t,he(a,n),a),t)),be=F((e,t)=>fe(t).every((n,r,a,i)=>e(he(r,t),r,a,i))),$e=F((e,t)=>fe(t).some((n,r,a,i)=>e(he(r,t),r,a,i)));var xe={cons:(e,t="")=>Object.freeze({...ue,id:t,instance:e,value:e}),uri:e=>`${e.id}#${encodeURI(e.pointer)}`,value:fe,typeOf:de,step:he,entries:e=>Object.keys(fe(e)).map(t=>[t,he(t,e)]),keys:e=>Object.keys(fe(e)),map:ye,filter:ve,reduce:ge,every:be,some:$e,length:e=>fe(e).length},Oe=/; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *("(?:[\u000b\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\u000b\u0020-\u00ff])*"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g,Ie=/^[\u000b\u0020-\u007e\u0080-\u00ff]+$/,Se=/^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/,Ee=/\\([\u000b\u0020-\u00ff])/g,we=/([\\"])/g,je=/^[!#$%&'*+.^_`|~0-9A-Za-z-]+\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/;
/*!
 * content-type
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */function Pe(e){var t=String(e);if(Se.test(t))return t;if(t.length>0&&!Ie.test(t))throw new TypeError("invalid parameter value");return'"'+t.replace(we,"\\$1")+'"'}function Ae(e){this.parameters=Object.create(null),this.type=e}var ke={format:function(e){if(!e||"object"!=typeof e)throw new TypeError("argument obj is required");var t=e.parameters,n=e.type;if(!n||!je.test(n))throw new TypeError("invalid type");var r=n;if(t&&"object"==typeof t)for(var a,i=Object.keys(t).sort(),s=0;s<i.length;s++){if(a=i[s],!Se.test(a))throw new TypeError("invalid parameter name");r+="; "+a+"="+Pe(t[a])}return r},parse:function(e){if(!e)throw new TypeError("argument string is required");var t="object"==typeof e?function(e){var t;"function"==typeof e.getHeader?t=e.getHeader("content-type"):"object"==typeof e.headers&&(t=e.headers&&e.headers["content-type"]);if("string"!=typeof t)throw new TypeError("content-type header is missing from object");return t}(e):e;if("string"!=typeof t)throw new TypeError("argument string is required to be a string");var n=t.indexOf(";"),r=-1!==n?t.substr(0,n).trim():t.trim();if(!je.test(r))throw new TypeError("invalid media type");var a=new Ae(r.toLowerCase());if(-1!==n){var i,s,o;for(Oe.lastIndex=n;s=Oe.exec(t);){if(s.index!==n)throw new TypeError("invalid parameter format");n+=s[0].length,i=s[1].toLowerCase(),'"'===(o=s[2])[0]&&(o=o.substr(1,o.length-2).replace(Ee,"$1")),a.parameters[i]=o}if(n!==t.length)throw new TypeError("invalid parameter format")}return a}},Te=async e=>Object.entries(await e),Ce=F(async(e,t)=>(await t).map(e)),Ne=F(async(e,t,n)=>(await n).reduce(async(t,n)=>e(await t,n),t)),Re=F(async(e,t,n={})=>Ne(async(t,n)=>await e(n)?t.concat([n]):t,[],t,n)),qe=F(async(e,t)=>{const n=await Ce(e,t);return(await Promise.all(n)).some(e=>e)}),Me=F(async(e,t)=>{const n=await Ce(e,t);return(await Promise.all(n)).every(e=>e)}),De=F((e,t)=>e.reduce(async(e,t)=>t(await e),t)),Ve={entries:Te,map:Ce,filter:Re,reduce:Ne,some:qe,every:Me,pipeline:De,all:e=>Promise.all(e),allValues:e=>De([Te,Ne(async(e,[t,n])=>(e[t]=await n,e),{})],e)},Le=function(e,t){if(e=e.trim(),(t=t.trim()).startsWith("about:"))return t;const n=function(e){const t={host:"",path:"",query:"",protocol:""};let n=e,r=e.indexOf("//");t.protocol=n.substring(0,r),r+=2;const a=e.indexOf("/",r),i=e.indexOf("?"),s=e.indexOf("#");-1!==s&&(n=n.substring(0,s));if(-1!==i){const e=n.substring(i);t.query=e,n=n.substring(0,i)}if(-1!==a){const e=n.substring(0,a);t.host=e,n=n.substring(a),t.path=n}else t.host=n;return t}(e),r=function(e){const t={href:e,hash:"",query:"",netPath:!1,absolutePath:!1,relativePath:!1};if(Fe.test(e))return t.netPath=!0,t;"/"===e[0]?t.absolutePath=!0:""!==e&&(t.relativePath=!0);let n=e;const r=e.indexOf("?"),a=e.indexOf("#");if(-1!==a){const e=n.substring(a);t.hash=e,n=n.substring(0,a)}if(-1!==r){const e=n.substring(r);t.query=e,n=n.substring(0,r)}return t.path=n,t}(t);if(!n.protocol&&!r.netPath)throw new Error("Error, protocol is not specified");if(r.netPath)return r.href.startsWith("//")&&(r.href=n.protocol+r.href),function(e){const t=e.indexOf("//")+2,n=!e.includes("/",t),r=!e.includes("?",t),a=!e.includes("#",t);return n&&r&&a}(r.href)?_e(r.href):r.href;if(r.absolutePath){const{path:e,query:t,hash:a}=r;return n.host+Je(e)+t+a}if(r.relativePath){const{path:e,query:t,hash:a}=r;let i,s=n.path,o=n.host;return 0===e.length?i=s:(s=s.substring(0,s.lastIndexOf("/")),i=Je(s+"/"+e)),o+=""!==i||t||a?i+t+a:"/",o}{const{host:e,path:t,query:a}=n;return t||a?e+t+a+r.hash:_e(e)}};function _e(e){return e+("/"===e[e.length-1]?"":"/")}function Je(e){let t=e.split("/");""===t[0]&&(t=t.slice(1));let n=[];return t.forEach((e,r)=>{"."!==e&&(".."===e?n.pop():""===e&&r!==t.length-1||n.push(e))}),"/"+n.join("/")}const Fe=new RegExp("^([a-z][a-z0-9+.-]*:)?//","i");var ze=fetch;const{jsonTypeOf:Be,splitUrl:Ge}=ne,Xe={},Ue={},Ke=(e,t)=>{const n=e in Ue?Ue[e]:e;if(n in Xe)return Xe[n][t]},He={},We={},Ze=(e,t="",n="")=>{e=JSON.parse(JSON.stringify(e));const r=Ge(e.$schema||n)[0];if(!r)throw Error("Couldn't determine schema version");delete e.$schema;const a=Ke(r,"baseToken"),i=Ke(r,"anchorToken"),s=Ge(t)[0];if(!s&&!Ge(e[a]||"")[0])throw Error("Couldn't determine an identifier for the schema");const o=rt(s,e[a]||""),[c,l]=Ge(o);delete e[a],l&&a===i&&(e[i]=i!==a?encodeURI(l):"#"+encodeURI(l)),s&&(We[s]=c);const p={},m=Ke(r,"recursiveAnchorToken");let u;!0===e[m]&&(p["#"]=c,e[i]="",delete e[m]);const f=Ke(r,"vocabularyToken");Be(e[f],"object")?(Ue[c]=r,u=e[f],delete e[f]):(Ue[c]=r,u={[r]:!0});const d={};He[c]={id:c,schemaVersion:r,schema:Qe(e,c,r,ee.nil,d,p),anchors:d,dynamicAnchors:p,vocabulary:u,validated:!1}},Qe=(e,t,n,r,a,i)=>{if(Be(e,"object")){const s="string"==typeof e.$schema?Ge(e.$schema)[0]:n,o=Ke(s,"embeddedToken"),c=Ke(s,"anchorToken");if("string"==typeof e[o]&&(o!==c||"#"!==e[o][0])){const r=rt(t,e[o]);return e[o]=r,Ze(e,r,n),se(e[o],e)}const l=Ke(n,"anchorToken"),p=Ke(n,"dynamicAnchorToken");"string"==typeof e[p]&&(i["#"+e[p]]=t,e[l]=e[p],delete e[p]);const m=Ke(n,"embeddedToken");if("string"==typeof e[l]){const t=l!==m?e[l]:e[l].slice(1);a[t]=r,delete e[l]}const u=Ke(n,"jrefToken");if("string"==typeof e[u])return se(e[u],e);for(let s in e)e[s]=Qe(e[s],t,n,ee.append(s,r),a,i);const f=Ke(n,"jsrefToken");"string"==typeof e[f]&&(e[f]=se(e[f],e[f]));const d=Ke(n,"dynamicJsrefToken");return"string"==typeof e[d]&&(e[d]=se(e[d],e[d],!0)),e}return Array.isArray(e)?e.map((e,s)=>Qe(e,t,n,ee.append(s,r),a,i)):e},Ye=e=>He[We[e]]||He[e],et=Object.freeze({id:"",schemaVersion:void 0,pointer:"",schema:void 0,dynamicAnchors:{}}),tt=async(e,t=et,n=!1)=>{const r=n&&t.dynamicAnchors[e]?t.dynamicAnchors[e]:st(t),a=rt(r,e),[i,s]=Ge(a);if(!(e=>e in He||e in We)(i)){const e=await ze(i,{headers:{Accept:"application/schema+json"}});if(e.status>=400)throw await e.text(),Error("Failed to retrieve schema with id: "+i);if(e.headers.has("content-type")){const t=ke.parse(e.headers.get("content-type")).type;if("application/schema+json"!==t)throw Error(`${i} is not a schema. Found a document with media type: ${t}`)}Ze(await e.json(),i)}const o=Ye(i),c=s&&"/"!==s[0]?it(o,s):s,l=Object.freeze({id:o.id,schemaVersion:o.schemaVersion,vocabulary:o.vocabulary,pointer:c,schema:o.schema,value:ee.get(c,o.schema),dynamicAnchors:{...o.dynamicAnchors,...t.dynamicAnchors},validated:o.validated});return nt(l)},nt=e=>oe(e.value)?tt(ce(e.value),e,pe(e.value)):e,rt=(e,t)=>{const n=Le(e,t),r=Ge(e)[0];if(r&&"file"===at(n)&&"file"!==at(r))throw Error(`Can't access file '${n}' resource from network context '${e}'`);return n},at=e=>{const t=e.match(/^(.+):\/\//);return t?t[1]:""},it=(e,t)=>{if(!(t in e.anchors))throw Error(`No such anchor '${encodeURI(e.id)}#${encodeURI(t)}'`);return e.anchors[t]},st=e=>`${e.id}#${encodeURI(e.pointer)}`,ot=e=>oe(e.value)?le(e.value):e.value,ct=(e,t)=>{const n=Ye(t.id),r=Object.freeze({id:t.id,schemaVersion:t.schemaVersion,vocabulary:t.vocabulary,pointer:ee.append(e,t.pointer),schema:n.schema,value:ot(t)[e],dynamicAnchors:t.dynamicAnchors,validated:n.validated});return nt(r)},lt=F((e,t)=>Ve.pipeline([ot,Ve.map(async(n,r)=>e(await ct(r,t),r)),Ve.all],t));var pt={setConfig:(e,t,n)=>{Xe[e]||(Xe[e]={}),Xe[e][t]=n},getConfig:Ke,add:Ze,get:tt,markValidated:e=>{He[e].validated=!0},uri:st,value:ot,typeOf:(e,t)=>Be(ot(e),t),has:(e,t)=>e in ot(t),step:ct,keys:e=>Object.keys(ot(e)),entries:e=>Ve.pipeline([ot,Object.keys,Ve.map(async t=>[t,await ct(t,e)]),Ve.all],e),map:lt,length:e=>ot(e).length};class mt extends Error{constructor(e){super("Invalid Schema"),this.name=this.constructor.name,this.output=e}}var ut=mt;const ft="FLAG",dt="BASIC",ht="DETAILED",yt="VERBOSE";let vt=ht,gt=!0;const bt=(e,t)=>(n,r=ft)=>{if(![ft,dt,ht,yt].includes(r))throw Error(`The '${r}' error format is not supported`);let a=[];const i=J.subscribe("result",$t(r,a));return Pt(t,n,e),J.unsubscribe(i),a[0]},$t=(e,t)=>{const n=[];return(r,a)=>{const i={...a,errors:[]};for(;n.length>0&&xt(n[n.length-1],i);){const t=n.pop();let r=[];e===dt&&(r=t.errors,delete t.errors),i.errors.unshift(t,...r)}(e===yt||e!==ft&&!i.valid)&&n.push(i),t[0]=i}},xt=(e,t)=>e.absoluteKeywordLocation.startsWith(t.absoluteKeywordLocation)||t.keyword.endsWith("#validate")&&e.instanceLocation===t.instanceLocation,Ot={},It=e=>Ot[e],St=e=>e in Ot,Et={},wt={},jt=async(e,t)=>{if(!St(e.schemaVersion+"#validate")){const t=await pt.get(e.schemaVersion);(pt.getConfig(t.id,"mandatoryVocabularies")||[]).forEach(e=>{if(!t.vocabulary[e])throw Error(`Vocabulary '${e}' must be explicitly declared and required`)}),Object.entries(t.vocabulary).forEach(([e,n])=>{if(e in Et)Object.entries(Et[e]).forEach(([e,n])=>{((e,t)=>{Ot[e]={collectEvaluatedItems:(e,n,r)=>t.interpret(e,n,r)&&0,collectEvaluatedProperties:(e,n,r)=>t.interpret(e,n,r)&&[],...t}})(`${t.id}#${e}`,n)});else if(n)throw Error("Missing required vocabulary: "+e)})}if(gt&&!e.validated){if(pt.markValidated(e.id),!(e.schemaVersion in wt)){const t=await pt.get(e.schemaVersion),n={},r=await jt(t,n);wt[t.id]=bt(n,r)}const t=xe.cons(e.schema,e.id),n=wt[e.schemaVersion](t,vt);if(!n.valid)throw new ut(n)}return await It(e.schemaVersion+"#validate").compile(e,t),pt.uri(e)},Pt=(e,t,n)=>{const[r]=n[e];return It(r).interpret(e,t,n)};var At={validate:async(e,t,n)=>{const r={},a=await jt(e,r),i=(e,t=ft)=>bt(r,a)(xe.cons(e),t);return void 0===t?i:i(t,n)},setMetaOutputFormat:e=>{vt=e},setShouldMetaValidate:e=>{gt=e},FLAG:ft,BASIC:dt,DETAILED:ht,VERBOSE:yt,getKeyword:It,hasKeyword:St,defineVocabulary:(e,t)=>{Et[e]=t},compileSchema:jt,interpretSchema:Pt,collectEvaluatedProperties:(e,t,n,r)=>{const[a]=n[e];return It(a).collectEvaluatedProperties(e,t,n,r)},collectEvaluatedItems:(e,t,n,r)=>{const[a]=n[e];return It(a).collectEvaluatedItems(e,t,n,r)}};var kt={compile:async(e,t)=>{const n=pt.uri(e);if(!(n in t)){t[n]=!1;const r=pt.value(e);t[n]=[e.schemaVersion+"#validate",pt.uri(e),"boolean"==typeof r?r:await Ve.pipeline([pt.entries,Ve.map(([t,n])=>[`${e.schemaVersion}#${t}`,n]),Ve.filter(([t])=>At.hasKeyword(t)&&t!==e.schemaVersion+"#validate"),Ve.map(async([n,r])=>{const a=await At.getKeyword(n).compile(r,t,e);return[n,pt.uri(r),a]}),Ve.all],e)]}},interpret:(e,t,n)=>{const[r,a,i]=n[e],s="boolean"==typeof i?i:i.every(([e,r,a])=>{const i=At.getKeyword(e).interpret(a,t,n);return J.publishSync("result",{keyword:e,absoluteKeywordLocation:r,instanceLocation:xe.uri(t),valid:i}),i});return J.publishSync("result",{keyword:r,absoluteKeywordLocation:a,instanceLocation:xe.uri(t),valid:s}),s},collectEvaluatedProperties:(e,t,n,r=!1)=>{const a=n[e][2];return"boolean"==typeof a?!!a&&[]:a.filter(([e])=>!r||!e.endsWith("#unevaluatedProperties")).reduce((e,[r,,a])=>{const i=e&&At.getKeyword(r).collectEvaluatedProperties(a,t,n);return i&&e.concat(i)},[])},collectEvaluatedItems:(e,t,n,r=!1)=>{const a=n[e][2];return"boolean"==typeof a?!!a&&[]:a.filter(([e])=>!r||!e.endsWith("#unevaluatedItems")).reduce((e,[r,,a])=>{const i=!1!==e&&At.getKeyword(r).collectEvaluatedItems(a,t,n);return!1!==i&&Math.max(e,i)},0)}},Tt={Core:At,Schema:pt,Instance:xe,Keywords:{metaData:{compile:()=>{},interpret:()=>!0},validate:kt}};const{Core:Ct,Schema:Nt,Instance:Rt}=Tt;var qt={compile:async(e,t,n)=>{const r=await Nt.step("items",n),a=Nt.typeOf(r,"array")?Nt.length(r):Number.MAX_SAFE_INTEGER;return Nt.typeOf(e,"boolean")?[a,Nt.value(e)]:[a,await Ct.compileSchema(e,t)]},interpret:([e,t],n,r)=>!Rt.typeOf(n,"array")||("string"==typeof t?Rt.every((n,a)=>a<e||Ct.interpretSchema(t,n,r),n):Rt.every((n,r)=>r<e||t,n))};const{Core:Mt,Schema:Dt,Instance:Vt}=Tt,Lt=([e,t],n,r)=>!Vt.typeOf(n,"array")||Vt.every((n,a)=>a<e||Mt.interpretSchema(t,n,r),n);var _t={compile:async(e,t,n)=>{const r=await Dt.step("items",n);return[Dt.typeOf(r,"array")?Dt.length(r):Number.MAX_SAFE_INTEGER,await Mt.compileSchema(e,t)]},interpret:Lt,collectEvaluatedItems:(e,t,n)=>Lt(e,t,n)&&Number.MAX_SAFE_INTEGER};const{Core:Jt,Schema:Ft,Instance:zt}=Tt;var Bt={compile:async(e,t,n)=>{const r=await Ft.step("properties",n),a=Ft.typeOf(r,"object")?Ft.keys(r):[],i=await Ft.step("patternProperties",n),s=Ft.typeOf(i,"object")?Ft.keys(i).map(e=>new RegExp(e)):[];return Ft.typeOf(e,"boolean")?[a,s,Ft.value(e)]:[a,s,await Jt.compileSchema(e,t)]},interpret:([e,t,n],r,a)=>{if(!zt.typeOf(r,"object"))return!0;const i=zt.entries(r).filter(([n])=>!e.includes(n)&&!t.some(e=>e.test(n)));return"string"==typeof n?i.every(([,e])=>Jt.interpretSchema(n,e,a)):0===i.length||n}};const{Core:Gt,Schema:Xt,Instance:Ut}=Tt,Kt=([e,t,n],r,a)=>!Ut.typeOf(r,"object")||Ut.entries(r).filter(([n])=>!e.includes(n)&&!t.some(e=>e.test(n))).every(([,e])=>Gt.interpretSchema(n,e,a));var Ht={compile:async(e,t,n)=>{const r=await Xt.step("properties",n),a=Xt.typeOf(r,"object")?Xt.keys(r):[],i=await Xt.step("patternProperties",n);return[a,Xt.typeOf(i,"object")?Xt.keys(i).map(e=>new RegExp(e)):[],await Gt.compileSchema(e,t)]},interpret:Kt,collectEvaluatedProperties:(e,t,n)=>Kt(e,t,n)&&[new RegExp("")]};const{Core:Wt,Schema:Zt}=Tt;var Qt={compile:(e,t)=>Ve.pipeline([Zt.map(async e=>Wt.compileSchema(await e,t)),Ve.all],e),interpret:(e,t,n)=>e.every(e=>Wt.interpretSchema(e,t,n)),collectEvaluatedProperties:(e,t,n)=>e.reduce((e,r)=>{const a=e&&Wt.collectEvaluatedProperties(r,t,n);return a&&e.concat(a)},[]),collectEvaluatedItems:(e,t,n)=>e.reduce((e,r)=>{const a=!1!==e&&Wt.collectEvaluatedItems(r,t,n);return!1!==a&&Math.max(e,a)},0)};const{Core:Yt,Schema:en}=Tt;var tn={compile:(e,t)=>Ve.pipeline([en.map(async e=>Yt.compileSchema(await e,t)),Ve.all],e),interpret:(e,t,n)=>e.some(e=>Yt.interpretSchema(e,t,n)),collectEvaluatedProperties:(e,t,n)=>e.reduce((e,r)=>{const a=Yt.collectEvaluatedProperties(r,t,n);return a?(e||[]).concat(a):e},!1),collectEvaluatedItems:(e,t,n)=>e.reduce((e,r)=>{const a=Yt.collectEvaluatedItems(r,t,n);return!1!==a?Math.max(e,a):e},!1)},nn=Object.keys,rn=JSON.stringify;var an=function(e){return""+function e(t,n){var r,a,i,s,o,c,l;if("string"==(l=typeof t))return rn(t);if(!0===t)return"true";if(!1===t)return"false";if(null===t)return"null";if(t instanceof Array){for(i="[",a=t.length-1,r=0;r<a;r++)i+=e(t[r],!1)+",";return a>-1&&(i+=e(t[r],!1)),i+"]"}if(t instanceof Object){if("function"==typeof t.toJSON)return e(t.toJSON(),n);for(a=(s=nn(t).sort()).length,i="",r=0;r<a;)void 0!==(c=e(t[o=s[r]],!0))&&(r&&""!==i&&(i+=","),i+=rn(o)+":"+c),r++;return"{"+i+"}"}switch(l){case"function":case"undefined":return n?void 0:null;default:return isFinite(t)?t:null}}(e,!1)};const{Schema:sn,Instance:on}=Tt;var cn={compile:e=>an(sn.value(e)),interpret:(e,t)=>an(on.value(t))===e};const{Core:ln,Instance:pn}=Tt;var mn={compile:(e,t)=>ln.compileSchema(e,t),interpret:(e,t,n)=>!pn.typeOf(t,"array")||pn.some(t=>ln.interpretSchema(e,t,n),t)};const{Core:un,Schema:fn,Instance:dn}=Tt;var hn={compile:async(e,t,n)=>{const r=await un.compileSchema(e,t),a=await fn.step("minContains",n),i=fn.typeOf(a,"number")?fn.value(a):1,s=await fn.step("maxContains",n);return{contains:r,minContains:i,maxContains:fn.typeOf(s,"number")?fn.value(s):Number.MAX_SAFE_INTEGER}},interpret:({contains:e,minContains:t,maxContains:n},r,a)=>{if(!dn.typeOf(r,"array"))return!0;const i=dn.reduce((t,n)=>un.interpretSchema(e,n,a)?t+1:t,0,r);return i>=t&&i<=n}};const{Core:yn,Schema:vn}=Tt;var gn={compile:async(e,t)=>{await Ve.pipeline([vn.entries,Ve.map(([,e])=>yn.compileSchema(e,t)),Ve.all],e)},interpret:()=>!0};const{Core:bn,Schema:$n,Instance:xn}=Tt;var On={compile:(e,t)=>Ve.pipeline([$n.entries,Ve.map(async([e,n])=>[e,$n.typeOf(n,"array")?$n.value(n):await bn.compileSchema(n,t)]),Ve.all],e),interpret:(e,t,n)=>{const r=xn.value(t);return!xn.typeOf(t,"object")||e.every(([e,a])=>!(e in r)||(Array.isArray(a)?a.every(e=>e in r):bn.interpretSchema(a,t,n)))}};const{Schema:In,Instance:Sn}=Tt;var En={compile:e=>Ve.pipeline([In.entries,Ve.map(([e,t])=>[e,In.value(t)]),Ve.all],e),interpret:(e,t)=>{const n=Sn.value(t);return!Sn.typeOf(t,"object")||e.every(([e,t])=>!(e in n)||t.every(e=>e in n))}};const{Core:wn,Schema:jn,Instance:Pn}=Tt;var An={compile:(e,t)=>Ve.pipeline([jn.entries,Ve.map(async([e,n])=>[e,await wn.compileSchema(n,t)]),Ve.all],e),interpret:(e,t,n)=>{const r=Pn.value(t);return!Pn.typeOf(t,"object")||e.every(([e,a])=>!(e in r)||wn.interpretSchema(a,t,n))},collectEvaluatedProperties:(e,t,n)=>{const r=Pn.value(t);return e.reduce((e,[a,i])=>{if(!e||!(a in r))return e;const s=wn.collectEvaluatedProperties(i,t,n);return s&&e.concat(s)},[])}};const{Schema:kn,Instance:Tn}=Tt;var Cn={compile:e=>kn.value(e).map(an),interpret:(e,t)=>e.some(e=>an(Tn.value(t))===e)};const{Schema:Nn,Instance:Rn}=Tt;var qn={compile:async e=>Nn.value(e),interpret:(e,t)=>!Rn.typeOf(t,"number")||Rn.value(t)<e};const{Schema:Mn,Instance:Dn}=Tt;var Vn={compile:async e=>Mn.value(e),interpret:(e,t)=>!Dn.typeOf(t,"number")||Dn.value(t)>e};const{Core:Ln,Schema:_n}=Tt;var Jn={compile:async(e,t,n)=>{const r={};if(r.if=await Ln.compileSchema(e,t),_n.has("then",n)){const e=await _n.step("then",n);r.then=await Ln.compileSchema(e,t)}if(_n.has("else",n)){const e=await _n.step("else",n);r.else=await Ln.compileSchema(e,t)}return r},interpret:(e,t,n)=>Ln.interpretSchema(e.if,t,n)?!("then"in e)||Ln.interpretSchema(e.then,t,n):!("else"in e)||Ln.interpretSchema(e.else,t,n),collectEvaluatedProperties:(e,t,n)=>{const r=Ln.collectEvaluatedProperties(e.if,t,n),a=r?"then":"else";if(e[a]){const i=Ln.collectEvaluatedProperties(e[a],t,n);return i&&(r||[]).concat(i)}return r||[]},collectEvaluatedItems:(e,t,n)=>{const r=Ln.collectEvaluatedItems(e.if,t,n),a="number"==typeof r?"then":"else";if(e[a]){const i=Ln.collectEvaluatedItems(e[a],t,n);return!1!==i&&Math.max(r,i)}return r||0}};const{Core:Fn,Schema:zn,Instance:Bn}=Tt,Gn=(e,t,n)=>!Bn.typeOf(t,"array")||("string"==typeof e?Bn.every(t=>Fn.interpretSchema(e,t,n),t):Bn.every((t,r)=>!(r in e)||Fn.interpretSchema(e[r],t,n),t));var Xn={compile:(e,t)=>zn.typeOf(e,"array")?Ve.pipeline([zn.map(e=>Fn.compileSchema(e,t)),Ve.all],e):Fn.compileSchema(e,t),interpret:Gn,collectEvaluatedItems:(e,t,n)=>Gn(e,t,n)&&("string"==typeof e?Number.MAX_SAFE_INTEGER:e.length)};const{Core:Un,Schema:Kn,Instance:Hn}=Tt,Wn=([e,t],n,r)=>!Hn.typeOf(n,"array")||Hn.every((n,a)=>a<e||Un.interpretSchema(t,n,r),n);var Zn={compile:async(e,t,n)=>{const r=await Kn.step("prefixItems",n);return[Kn.typeOf(r,"array")?Kn.length(r):0,await Un.compileSchema(e,t)]},interpret:Wn,collectEvaluatedItems:(e,t,n)=>Wn(e,t,n)&&Number.MAX_SAFE_INTEGER};const{Schema:Qn,Instance:Yn}=Tt;var er={compile:e=>Qn.value(e),interpret:(e,t)=>!Yn.typeOf(t,"array")||Yn.length(t)<=e};const{Schema:tr,Instance:nr}=Tt;var rr={compile:e=>tr.value(e),interpret:(e,t)=>!nr.typeOf(t,"string")||nr.length(t)<=e};const{Schema:ar,Instance:ir}=Tt;var sr={compile:e=>ar.value(e),interpret:(e,t)=>!ir.typeOf(t,"string")||[...ir.value(t)].length<=e};const{Schema:or,Instance:cr}=Tt;var lr={compile:e=>or.value(e),interpret:(e,t)=>!cr.typeOf(t,"object")||cr.keys(t).length<=e};const{Schema:pr,Instance:mr}=Tt;var ur={compile:async(e,t,n)=>{const r=await pr.step("exclusiveMaximum",n),a=pr.value(r);return[pr.value(e),a]},interpret:([e,t],n)=>{if(!mr.typeOf(n,"number"))return!0;const r=mr.value(n);return t?r<e:r<=e}};const{Schema:fr,Instance:dr}=Tt;var hr={compile:async e=>fr.value(e),interpret:(e,t)=>!dr.typeOf(t,"number")||dr.value(t)<=e};const{Schema:yr,Instance:vr}=Tt;var gr={compile:e=>yr.value(e),interpret:(e,t)=>!vr.typeOf(t,"array")||vr.length(t)>=e};const{Schema:br,Instance:$r}=Tt;var xr={compile:e=>br.value(e),interpret:(e,t)=>!$r.typeOf(t,"string")||$r.value(t).length>=e};const{Schema:Or,Instance:Ir}=Tt;var Sr={compile:e=>Or.value(e),interpret:(e,t)=>!Ir.typeOf(t,"string")||[...Ir.value(t)].length>=e};const{Schema:Er,Instance:wr}=Tt;var jr={compile:e=>Er.value(e),interpret:(e,t)=>{const n=wr.value(t);return!wr.typeOf(t,"object")||Object.keys(n).length>=e}};const{Schema:Pr,Instance:Ar}=Tt;var kr={compile:async(e,t,n)=>{const r=await Pr.step("exclusiveMinimum",n),a=Pr.value(r);return[Pr.value(e),a]},interpret:([e,t],n)=>{if(!Ar.typeOf(n,"number"))return!0;const r=Ar.value(n);return t?r>e:r>=e}};const{Schema:Tr,Instance:Cr}=Tt;var Nr={compile:async e=>Tr.value(e),interpret:(e,t)=>!Cr.typeOf(t,"number")||Cr.value(t)>=e};const{Schema:Rr,Instance:qr}=Tt,Mr=(e,t)=>Math.abs(e-t)<1.1920929e-7;var Dr={compile:e=>Rr.value(e),interpret:(e,t)=>{if(!qr.typeOf(t,"number"))return!0;const n=qr.value(t)%e;return Mr(0,n)||Mr(e,n)}};const{Core:Vr}=Tt;var Lr={compile:Vr.compileSchema,interpret:(e,t,n)=>!Vr.interpretSchema(e,t,n)};const{Core:_r,Schema:Jr}=Tt;var Fr={compile:(e,t)=>Ve.pipeline([Jr.map(async e=>_r.compileSchema(await e,t)),Ve.all],e),interpret:(e,t,n)=>{let r=0;for(const a of e)if(_r.interpretSchema(a,t,n)&&r++,r>1)break;return 1===r},collectEvaluatedProperties:(e,t,n)=>{let r=0;return e.reduce((e,a)=>{if(r>1)return!1;const i=_r.collectEvaluatedProperties(a,t,n);return i?0==r++&&i:e},!1)},collectEvaluatedItems:(e,t,n)=>{let r=0;return e.reduce((e,a)=>{if(r>1)return!1;const i=_r.collectEvaluatedItems(a,t,n);return"number"==typeof i?0==r++&&i:e},!1)}};const{Schema:zr,Instance:Br}=Tt;var Gr={compile:e=>new RegExp(zr.value(e),"u"),interpret:(e,t)=>!Br.typeOf(t,"string")||e.test(Br.value(t))};const{Core:Xr,Schema:Ur,Instance:Kr}=Tt,Hr=(e,t,n)=>!Kr.typeOf(t,"object")||e.every(([e,r])=>Kr.entries(t).filter(([t])=>e.test(t)).every(([,e])=>Xr.interpretSchema(r,e,n)));var Wr={compile:(e,t)=>Ve.pipeline([Ur.entries,Ve.map(async([e,n])=>[new RegExp(e,"u"),await Xr.compileSchema(n,t)]),Ve.all],e),interpret:Hr,collectEvaluatedProperties:(e,t,n)=>Hr(e,t,n)&&e.map(([e])=>e)};var Zr={isObject:e=>"object"==typeof e&&!Array.isArray(e)&&null!==e,escapeRegExp:e=>e.replace(/[.*+\-?^${}()|[\]\\]/g,"\\$&")};const{Core:Qr,Schema:Yr,Instance:ea}=Tt,{escapeRegExp:ta}=Zr,na=(e,t,n)=>!ea.typeOf(t,"object")||ea.entries(t).filter(([t])=>t in e).every(([t,r])=>Qr.interpretSchema(e[t],r,n));var ra={compile:(e,t)=>Ve.pipeline([Yr.entries,Ve.reduce(async(e,[n,r])=>(e[n]=await Qr.compileSchema(r,t),e),Object.create(null))],e),interpret:na,collectEvaluatedProperties:(e,t,n)=>na(e,t,n)&&Object.keys(e).map(e=>new RegExp(`^${ta(e)}$`))};const{Core:aa,Instance:ia}=Tt;var sa={compile:(e,t)=>aa.compileSchema(e,t),interpret:(e,t,n)=>!ia.typeOf(t,"object")||ia.keys(t).every(t=>aa.interpretSchema(e,ia.cons(t),n))};const{Core:oa}=Tt;var ca={compile:oa.compileSchema,interpret:oa.interpretSchema,collectEvaluatedProperties:oa.collectEvaluatedProperties,collectEvaluatedItems:oa.collectEvaluatedItems};const{Core:la}=Tt;var pa={compile:la.compileSchema,interpret:la.interpretSchema,collectEvaluatedProperties:la.collectEvaluatedProperties,collectEvaluatedItems:la.collectEvaluatedItems};const{Schema:ma,Instance:ua}=Tt;var fa={compile:e=>ma.value(e),interpret:(e,t)=>!ua.typeOf(t,"object")||e.every(e=>ua.value(t).hasOwnProperty(e))};const{Core:da,Schema:ha,Instance:ya}=Tt,va=(e,t,n)=>!ya.typeOf(t,"array")||ya.every((t,r)=>!(r in e)||da.interpretSchema(e[r],t,n),t);var ga={compile:(e,t)=>Ve.pipeline([ha.map(e=>da.compileSchema(e,t)),Ve.all],e),interpret:va,collectEvaluatedItems:(e,t,n)=>va(e,t,n)&&e.length};const{Schema:ba,Instance:$a}=Tt;var xa={compile:e=>ba.value(e),interpret:(e,t)=>"string"==typeof e?$a.typeOf(t,e):e.some($a.typeOf(t))};const{Core:Oa,Schema:Ia,Instance:Sa}=Tt,Ea=([e,t],n,r)=>{if(!Sa.typeOf(n,"array"))return!0;const a=Oa.collectEvaluatedItems(e,n,r,!0);return!1===a||Sa.filter((e,t)=>t>=a,n).every(e=>Oa.interpretSchema(t,e,r))};var wa={compile:async(e,t,n)=>[Ia.uri(n),await Oa.compileSchema(e,t)],interpret:Ea,collectEvaluatedItems:(e,t,n)=>Ea(e,t,n)&&Number.MAX_SAFE_INTEGER};const{Core:ja,Schema:Pa,Instance:Aa}=Tt,ka=([e,t],n,r)=>{if(!Aa.typeOf(n,"object"))return!0;const a=ja.collectEvaluatedProperties(e,n,r,!0);return!a||Aa.entries(n).filter(([e])=>!a.some(t=>e.match(t))).every(([,e])=>ja.interpretSchema(t,e,r))};var Ta={compile:async(e,t,n)=>[Pa.uri(n),await ja.compileSchema(e,t)],interpret:ka,collectEvaluatedProperties:(e,t,n)=>ka(e,t,n)&&[new RegExp("")]};const{Schema:Ca,Instance:Na}=Tt;var Ra={compile:e=>Ca.value(e),interpret:(e,t)=>{if(!Na.typeOf(t,"array")||!1===e)return!0;const n=Na.map(e=>an(Na.value(e)),t);return new Set(n).size===n.length}};const{Keywords:qa}=Tt;var Ma={additionalItems:qt,additionalItems6:_t,additionalProperties:Bt,additionalProperties6:Ht,allOf:Qt,anyOf:tn,const:cn,contains:mn,containsMinContainsMaxContains:hn,definitions:gn,dependencies:On,dependentRequired:En,dependentSchemas:An,enum:Cn,exclusiveMaximum:qn,exclusiveMinimum:Vn,ifThenElse:Jn,items:Xn,items2020XX:Zn,maxItems:er,maxLength:rr,maxLength6:sr,maxProperties:lr,maximumExclusiveMaximum:ur,maximum:hr,metaData:qa.metaData,minItems:gr,minLength:xr,minLength6:Sr,minProperties:jr,minimumExclusiveMinimum:kr,minimum:Nr,multipleOf:Dr,not:Lr,oneOf:Fr,pattern:Gr,patternProperties:Wr,properties:ra,propertyNames:sa,dynamicRef:ca,ref:pa,required:fa,tupleItems:ga,type:xa,unevaluatedItems:wa,unevaluatedProperties:Ta,uniqueItems:Ra,validate:qa.validate};const{Core:Da,Schema:Va}=Tt,La="http://json-schema.org/draft-04/schema";Va.setConfig(La,"baseToken","id"),Va.setConfig(La,"embeddedToken","id"),Va.setConfig(La,"anchorToken","id"),Va.setConfig(La,"jrefToken","$ref"),Va.add(JSON.parse('{\n    "id": "http://json-schema.org/draft-04/schema#",\n    "$schema": "http://json-schema.org/draft-04/schema#",\n    "description": "Core schema meta-schema",\n    "definitions": {\n        "schemaArray": {\n            "type": "array",\n            "minItems": 1,\n            "items": { "$ref": "#" }\n        },\n        "positiveInteger": {\n            "type": "integer",\n            "minimum": 0\n        },\n        "positiveIntegerDefault0": {\n            "allOf": [ { "$ref": "#/definitions/positiveInteger" }, { "default": 0 } ]\n        },\n        "simpleTypes": {\n            "enum": [ "array", "boolean", "integer", "null", "number", "object", "string" ]\n        },\n        "stringArray": {\n            "type": "array",\n            "items": { "type": "string" },\n            "minItems": 1,\n            "uniqueItems": true\n        }\n    },\n    "type": "object",\n    "properties": {\n        "id": {\n            "type": "string"\n        },\n        "$schema": {\n            "type": "string"\n        },\n        "title": {\n            "type": "string"\n        },\n        "description": {\n            "type": "string"\n        },\n        "default": {},\n        "multipleOf": {\n            "type": "number",\n            "minimum": 0,\n            "exclusiveMinimum": true\n        },\n        "maximum": {\n            "type": "number"\n        },\n        "exclusiveMaximum": {\n            "type": "boolean",\n            "default": false\n        },\n        "minimum": {\n            "type": "number"\n        },\n        "exclusiveMinimum": {\n            "type": "boolean",\n            "default": false\n        },\n        "maxLength": { "$ref": "#/definitions/positiveInteger" },\n        "minLength": { "$ref": "#/definitions/positiveIntegerDefault0" },\n        "pattern": {\n            "type": "string",\n            "format": "regex"\n        },\n        "additionalItems": {\n            "anyOf": [\n                { "type": "boolean" },\n                { "$ref": "#" }\n            ],\n            "default": {}\n        },\n        "items": {\n            "anyOf": [\n                { "$ref": "#" },\n                { "$ref": "#/definitions/schemaArray" }\n            ],\n            "default": {}\n        },\n        "maxItems": { "$ref": "#/definitions/positiveInteger" },\n        "minItems": { "$ref": "#/definitions/positiveIntegerDefault0" },\n        "uniqueItems": {\n            "type": "boolean",\n            "default": false\n        },\n        "maxProperties": { "$ref": "#/definitions/positiveInteger" },\n        "minProperties": { "$ref": "#/definitions/positiveIntegerDefault0" },\n        "required": { "$ref": "#/definitions/stringArray" },\n        "additionalProperties": {\n            "anyOf": [\n                { "type": "boolean" },\n                { "$ref": "#" }\n            ],\n            "default": {}\n        },\n        "definitions": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "properties": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "patternProperties": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "dependencies": {\n            "type": "object",\n            "additionalProperties": {\n                "anyOf": [\n                    { "$ref": "#" },\n                    { "$ref": "#/definitions/stringArray" }\n                ]\n            }\n        },\n        "enum": {\n            "type": "array",\n            "minItems": 1,\n            "uniqueItems": true\n        },\n        "type": {\n            "anyOf": [\n                { "$ref": "#/definitions/simpleTypes" },\n                {\n                    "type": "array",\n                    "items": { "$ref": "#/definitions/simpleTypes" },\n                    "minItems": 1,\n                    "uniqueItems": true\n                }\n            ]\n        },\n        "format": { "type": "string" },\n        "allOf": { "$ref": "#/definitions/schemaArray" },\n        "anyOf": { "$ref": "#/definitions/schemaArray" },\n        "oneOf": { "$ref": "#/definitions/schemaArray" },\n        "not": { "$ref": "#" }\n    },\n    "dependencies": {\n        "exclusiveMaximum": [ "maximum" ],\n        "exclusiveMinimum": [ "minimum" ]\n    },\n    "default": {}\n}')),Da.defineVocabulary(La,{validate:Ma.validate,additionalItems:Ma.additionalItems,additionalProperties:Ma.additionalProperties,allOf:Ma.allOf,anyOf:Ma.anyOf,default:Ma.metaData,definitions:Ma.definitions,dependencies:Ma.dependencies,description:Ma.metaData,enum:Ma.enum,format:Ma.metaData,items:Ma.items,maxItems:Ma.maxItems,maxLength:Ma.maxLength,maxProperties:Ma.maxProperties,maximum:Ma.maximumExclusiveMaximum,minItems:Ma.minItems,minLength:Ma.minLength,minProperties:Ma.minProperties,minimum:Ma.minimumExclusiveMinimum,multipleOf:Ma.multipleOf,not:Ma.not,oneOf:Ma.oneOf,pattern:Ma.pattern,patternProperties:Ma.patternProperties,properties:Ma.properties,required:Ma.required,title:Ma.metaData,type:Ma.type,uniqueItems:Ma.uniqueItems});const _a="http://json-schema.org/draft-04/hyper-schema";Va.setConfig(_a,"baseToken","id"),Va.setConfig(_a,"embeddedToken","id"),Va.setConfig(_a,"anchorToken","id"),Va.setConfig(_a,"jrefToken","$ref"),Va.add(JSON.parse('{\n    "$schema": "http://json-schema.org/draft-04/hyper-schema#",\n    "id": "http://json-schema.org/draft-04/hyper-schema#",\n    "title": "JSON Hyper-Schema",\n    "allOf": [\n        {"$ref": "http://json-schema.org/draft-04/schema#"}\n    ],\n    "properties": {\n        "additionalItems": {\n            "anyOf": [\n                {"type": "boolean"},\n                {"$ref": "#"}\n            ]\n        },\n        "additionalProperties": {\n            "anyOf": [\n                {"type": "boolean"},\n                {"$ref": "#"}\n            ]\n        },\n        "dependencies": {\n            "additionalProperties": {\n                "anyOf": [\n                    {"$ref": "#"},\n                    {"type": "array"}\n                ]\n            }\n        },\n        "items": {\n            "anyOf": [\n                {"$ref": "#"},\n                {"$ref": "#/definitions/schemaArray"}\n            ]\n        },\n        "definitions": {\n            "additionalProperties": {"$ref": "#"}\n        },\n        "patternProperties": {\n            "additionalProperties": {"$ref": "#"}\n        },\n        "properties": {\n            "additionalProperties": {"$ref": "#"}\n        },\n        "allOf": {"$ref": "#/definitions/schemaArray"},\n        "anyOf": {"$ref": "#/definitions/schemaArray"},\n        "oneOf": {"$ref": "#/definitions/schemaArray"},\n        "not": { "$ref": "#" },\n\n        "links": {\n            "type": "array",\n            "items": {"$ref": "#/definitions/linkDescription"}\n        },\n        "fragmentResolution": {\n            "type": "string"\n        },\n        "media": {\n            "type": "object",\n            "properties": {\n                "type": {\n                    "description": "A media type, as described in RFC 2046",\n                    "type": "string"\n                },\n                "binaryEncoding": {\n                    "description": "A content encoding scheme, as described in RFC 2045",\n                    "type": "string"\n                }\n            }\n        },\n        "pathStart": {\n            "description": "Instances\' URIs must start with this value for this schema to apply to them",\n            "type": "string",\n            "format": "uri"\n        }\n    },\n    "definitions": {\n        "schemaArray": {\n            "type": "array",\n            "items": {"$ref": "#"}\n        },\n        "linkDescription": {\n            "title": "Link Description Object",\n            "type": "object",\n            "required": ["href", "rel"],\n            "properties": {\n                "href": {\n                    "description": "a URI template, as defined by RFC 6570, with the addition of the $, ( and ) characters for pre-processing",\n                    "type": "string"\n                },\n                "rel": {\n                    "description": "relation to the target resource of the link",\n                    "type": "string"\n                },\n                "title": {\n                    "description": "a title for the link",\n                    "type": "string"\n                },\n                "targetSchema": {\n                    "description": "JSON Schema describing the link target",\n                    "$ref": "#"\n                },\n                "mediaType": {\n                    "description": "media type (as defined by RFC 2046) describing the link target",\n                    "type": "string"\n                },\n                "method": {\n                    "description": "method for requesting the target of the link (e.g. for HTTP this might be \\"GET\\" or \\"DELETE\\")",\n                    "type": "string"\n                },\n                "encType": {\n                    "description": "The media type in which to submit data along with the request",\n                    "type": "string",\n                    "default": "application/json"\n                },\n                "schema": {\n                    "description": "Schema describing the data to submit along with the request",\n                    "$ref": "#"\n                }\n            }\n        },\n        "readOnly": {\n            "description": "If true, indicates that the value of this property is controlled by the server.",\n            "type": "boolean",\n            "default": false\n        }\n    },\n    "links": [\n        {\n            "rel": "self",\n            "href": "{+id}"\n        },\n        {\n            "rel": "full",\n            "href": "{+($ref)}"\n        }\n    ]\n}')),Da.defineVocabulary(_a,{validate:Ma.validate,additionalItems:Ma.additionalItems,additionalProperties:Ma.additionalProperties,allOf:Ma.allOf,anyOf:Ma.anyOf,default:Ma.metaData,definitions:Ma.definitions,dependencies:Ma.dependencies,description:Ma.metaData,enum:Ma.enum,format:Ma.metaData,fragmentResolution:Ma.metaData,items:Ma.items,maxItems:Ma.maxItems,minProperties:Ma.minProperties,maxProperties:Ma.maxProperties,maximum:Ma.maximumExclusiveMaximum,media:Ma.metaData,minItems:Ma.minItems,minLength:Ma.minLength,maxLength:Ma.maxLength,minimum:Ma.minimumExclusiveMinimum,multipleOf:Ma.multipleOf,links:Ma.metaData,not:Ma.not,oneOf:Ma.oneOf,pathStart:Ma.metaData,pattern:Ma.pattern,patternProperties:Ma.patternProperties,properties:Ma.properties,readOnly:Ma.metaData,required:Ma.required,title:Ma.metaData,type:Ma.type,uniqueItems:Ma.uniqueItems});const{Core:Ja,Schema:Fa}=Tt,za="http://json-schema.org/draft-06/schema";Fa.setConfig(za,"baseToken","$id"),Fa.setConfig(za,"embeddedToken","$id"),Fa.setConfig(za,"anchorToken","$id"),Fa.setConfig(za,"jrefToken","$ref"),Fa.add(JSON.parse('{\n    "$schema": "http://json-schema.org/draft-06/schema#",\n    "$id": "http://json-schema.org/draft-06/schema#",\n    "title": "Core schema meta-schema",\n    "definitions": {\n        "schemaArray": {\n            "type": "array",\n            "minItems": 1,\n            "items": { "$ref": "#" }\n        },\n        "nonNegativeInteger": {\n            "type": "integer",\n            "minimum": 0\n        },\n        "nonNegativeIntegerDefault0": {\n            "allOf": [\n                { "$ref": "#/definitions/nonNegativeInteger" },\n                { "default": 0 }\n            ]\n        },\n        "simpleTypes": {\n            "enum": [\n                "array",\n                "boolean",\n                "integer",\n                "null",\n                "number",\n                "object",\n                "string"\n            ]\n        },\n        "stringArray": {\n            "type": "array",\n            "items": { "type": "string" },\n            "uniqueItems": true,\n            "default": []\n        }\n    },\n    "type": ["object", "boolean"],\n    "properties": {\n        "$id": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$schema": {\n            "type": "string",\n            "format": "uri"\n        },\n        "$ref": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "title": {\n            "type": "string"\n        },\n        "description": {\n            "type": "string"\n        },\n        "default": {},\n        "examples": {\n            "type": "array",\n            "items": {}\n        },\n        "multipleOf": {\n            "type": "number",\n            "exclusiveMinimum": 0\n        },\n        "maximum": {\n            "type": "number"\n        },\n        "exclusiveMaximum": {\n            "type": "number"\n        },\n        "minimum": {\n            "type": "number"\n        },\n        "exclusiveMinimum": {\n            "type": "number"\n        },\n        "maxLength": { "$ref": "#/definitions/nonNegativeInteger" },\n        "minLength": { "$ref": "#/definitions/nonNegativeIntegerDefault0" },\n        "pattern": {\n            "type": "string",\n            "format": "regex"\n        },\n        "additionalItems": { "$ref": "#" },\n        "items": {\n            "anyOf": [\n                { "$ref": "#" },\n                { "$ref": "#/definitions/schemaArray" }\n            ],\n            "default": {}\n        },\n        "maxItems": { "$ref": "#/definitions/nonNegativeInteger" },\n        "minItems": { "$ref": "#/definitions/nonNegativeIntegerDefault0" },\n        "uniqueItems": {\n            "type": "boolean",\n            "default": false\n        },\n        "contains": { "$ref": "#" },\n        "maxProperties": { "$ref": "#/definitions/nonNegativeInteger" },\n        "minProperties": { "$ref": "#/definitions/nonNegativeIntegerDefault0" },\n        "required": { "$ref": "#/definitions/stringArray" },\n        "additionalProperties": { "$ref": "#" },\n        "definitions": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "properties": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "patternProperties": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "dependencies": {\n            "type": "object",\n            "additionalProperties": {\n                "anyOf": [\n                    { "$ref": "#" },\n                    { "$ref": "#/definitions/stringArray" }\n                ]\n            }\n        },\n        "propertyNames": { "$ref": "#" },\n        "const": {},\n        "enum": {\n            "type": "array",\n            "minItems": 1,\n            "uniqueItems": true\n        },\n        "type": {\n            "anyOf": [\n                { "$ref": "#/definitions/simpleTypes" },\n                {\n                    "type": "array",\n                    "items": { "$ref": "#/definitions/simpleTypes" },\n                    "minItems": 1,\n                    "uniqueItems": true\n                }\n            ]\n        },\n        "format": { "type": "string" },\n        "allOf": { "$ref": "#/definitions/schemaArray" },\n        "anyOf": { "$ref": "#/definitions/schemaArray" },\n        "oneOf": { "$ref": "#/definitions/schemaArray" },\n        "not": { "$ref": "#" }\n    },\n    "default": {}\n}')),Ja.defineVocabulary(za,{validate:Ma.validate,additionalItems:Ma.additionalItems6,additionalProperties:Ma.additionalProperties6,allOf:Ma.allOf,anyOf:Ma.anyOf,const:Ma.const,contains:Ma.contains,default:Ma.metaData,definitions:Ma.definitions,dependencies:Ma.dependencies,description:Ma.metaData,enum:Ma.enum,examples:Ma.metaData,exclusiveMaximum:Ma.exclusiveMaximum,exclusiveMinimum:Ma.exclusiveMinimum,format:Ma.metaData,items:Ma.items,maxItems:Ma.maxItems,maxLength:Ma.maxLength6,maxProperties:Ma.maxProperties,maximum:Ma.maximum,minItems:Ma.minItems,minLength:Ma.minLength6,minProperties:Ma.minProperties,minimum:Ma.minimum,multipleOf:Ma.multipleOf,not:Ma.not,oneOf:Ma.oneOf,pattern:Ma.pattern,patternProperties:Ma.patternProperties,properties:Ma.properties,propertyNames:Ma.propertyNames,required:Ma.required,title:Ma.metaData,type:Ma.type,uniqueItems:Ma.uniqueItems});const{Core:Ba,Schema:Ga}=Tt,Xa="http://json-schema.org/draft-07/schema";Ga.setConfig(Xa,"baseToken","$id"),Ga.setConfig(Xa,"embeddedToken","$id"),Ga.setConfig(Xa,"anchorToken","$id"),Ga.setConfig(Xa,"jrefToken","$ref"),Ga.add(JSON.parse('{\n    "$schema": "http://json-schema.org/draft-07/schema#",\n    "$id": "http://json-schema.org/draft-07/schema#",\n    "title": "Core schema meta-schema",\n    "definitions": {\n        "schemaArray": {\n            "type": "array",\n            "minItems": 1,\n            "items": { "$ref": "#" }\n        },\n        "nonNegativeInteger": {\n            "type": "integer",\n            "minimum": 0\n        },\n        "nonNegativeIntegerDefault0": {\n            "allOf": [\n                { "$ref": "#/definitions/nonNegativeInteger" },\n                { "default": 0 }\n            ]\n        },\n        "simpleTypes": {\n            "enum": [\n                "array",\n                "boolean",\n                "integer",\n                "null",\n                "number",\n                "object",\n                "string"\n            ]\n        },\n        "stringArray": {\n            "type": "array",\n            "items": { "type": "string" },\n            "uniqueItems": true,\n            "default": []\n        }\n    },\n    "type": ["object", "boolean"],\n    "properties": {\n        "$id": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$schema": {\n            "type": "string",\n            "format": "uri"\n        },\n        "$ref": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$comment": {\n            "type": "string"\n        },\n        "title": {\n            "type": "string"\n        },\n        "description": {\n            "type": "string"\n        },\n        "default": true,\n        "readOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "writeOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "examples": {\n            "type": "array",\n            "items": true\n        },\n        "multipleOf": {\n            "type": "number",\n            "exclusiveMinimum": 0\n        },\n        "maximum": {\n            "type": "number"\n        },\n        "exclusiveMaximum": {\n            "type": "number"\n        },\n        "minimum": {\n            "type": "number"\n        },\n        "exclusiveMinimum": {\n            "type": "number"\n        },\n        "maxLength": { "$ref": "#/definitions/nonNegativeInteger" },\n        "minLength": { "$ref": "#/definitions/nonNegativeIntegerDefault0" },\n        "pattern": {\n            "type": "string",\n            "format": "regex"\n        },\n        "additionalItems": { "$ref": "#" },\n        "items": {\n            "anyOf": [\n                { "$ref": "#" },\n                { "$ref": "#/definitions/schemaArray" }\n            ],\n            "default": true\n        },\n        "maxItems": { "$ref": "#/definitions/nonNegativeInteger" },\n        "minItems": { "$ref": "#/definitions/nonNegativeIntegerDefault0" },\n        "uniqueItems": {\n            "type": "boolean",\n            "default": false\n        },\n        "contains": { "$ref": "#" },\n        "maxProperties": { "$ref": "#/definitions/nonNegativeInteger" },\n        "minProperties": { "$ref": "#/definitions/nonNegativeIntegerDefault0" },\n        "required": { "$ref": "#/definitions/stringArray" },\n        "additionalProperties": { "$ref": "#" },\n        "definitions": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "properties": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "patternProperties": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "propertyNames": { "format": "regex" },\n            "default": {}\n        },\n        "dependencies": {\n            "type": "object",\n            "additionalProperties": {\n                "anyOf": [\n                    { "$ref": "#" },\n                    { "$ref": "#/definitions/stringArray" }\n                ]\n            }\n        },\n        "propertyNames": { "$ref": "#" },\n        "const": true,\n        "enum": {\n            "type": "array",\n            "items": true,\n            "minItems": 1,\n            "uniqueItems": true\n        },\n        "type": {\n            "anyOf": [\n                { "$ref": "#/definitions/simpleTypes" },\n                {\n                    "type": "array",\n                    "items": { "$ref": "#/definitions/simpleTypes" },\n                    "minItems": 1,\n                    "uniqueItems": true\n                }\n            ]\n        },\n        "format": { "type": "string" },\n        "contentMediaType": { "type": "string" },\n        "contentEncoding": { "type": "string" },\n        "if": { "$ref": "#" },\n        "then": { "$ref": "#" },\n        "else": { "$ref": "#" },\n        "allOf": { "$ref": "#/definitions/schemaArray" },\n        "anyOf": { "$ref": "#/definitions/schemaArray" },\n        "oneOf": { "$ref": "#/definitions/schemaArray" },\n        "not": { "$ref": "#" }\n    },\n    "default": true\n}')),Ba.defineVocabulary(Xa,{validate:Ma.validate,additionalItems:Ma.additionalItems6,additionalProperties:Ma.additionalProperties6,allOf:Ma.allOf,anyOf:Ma.anyOf,const:Ma.const,contains:Ma.contains,default:Ma.metaData,definitions:Ma.definitions,dependencies:Ma.dependencies,description:Ma.metaData,enum:Ma.enum,exclusiveMaximum:Ma.exclusiveMaximum,exclusiveMinimum:Ma.exclusiveMinimum,format:Ma.metaData,if:Ma.ifThenElse,items:Ma.items,maxItems:Ma.maxItems,maxLength:Ma.maxLength6,maxProperties:Ma.maxProperties,maximum:Ma.maximum,minItems:Ma.minItems,minLength:Ma.minLength6,minProperties:Ma.minProperties,minimum:Ma.minimum,multipleOf:Ma.multipleOf,not:Ma.not,oneOf:Ma.oneOf,pattern:Ma.pattern,patternProperties:Ma.patternProperties,properties:Ma.properties,propertyNames:Ma.propertyNames,readOnly:Ma.metaData,required:Ma.required,title:Ma.metaData,type:Ma.type,uniqueItems:Ma.uniqueItems,writeOnly:Ma.metaData});const{Core:Ua,Schema:Ka}=Tt,Ha="https://json-schema.org/draft/2019-09/schema";Ka.setConfig(Ha,"baseToken","$id"),Ka.setConfig(Ha,"embeddedToken","$id"),Ka.setConfig(Ha,"anchorToken","$anchor"),Ka.setConfig(Ha,"jsrefToken","$ref"),Ka.setConfig(Ha,"dynamicJsrefToken","$recursiveRef"),Ka.setConfig(Ha,"recursiveAnchorToken","$recursiveAnchor"),Ka.setConfig(Ha,"commentToken","$comment"),Ka.setConfig(Ha,"vocabularyToken","$vocabulary"),Ka.setConfig(Ha,"mandatoryVocabularies",["https://json-schema.org/draft/2019-09/vocab/core"]),Ka.add(JSON.parse('{\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$id": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/2019-09/vocab/core": true,\n        "https://json-schema.org/draft/2019-09/vocab/applicator": true,\n        "https://json-schema.org/draft/2019-09/vocab/validation": true,\n        "https://json-schema.org/draft/2019-09/vocab/meta-data": true,\n        "https://json-schema.org/draft/2019-09/vocab/format": false,\n        "https://json-schema.org/draft/2019-09/vocab/content": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Core and Validation specifications meta-schema",\n    "allOf": [\n        {"$ref": "meta/core"},\n        {"$ref": "meta/applicator"},\n        {"$ref": "meta/validation"},\n        {"$ref": "meta/meta-data"},\n        {"$ref": "meta/format"},\n        {"$ref": "meta/content"}\n    ],\n    "type": ["object", "boolean"],\n    "properties": {\n        "definitions": {\n            "$comment": "While no longer an official keyword as it is replaced by $defs, this keyword is retained in the meta-schema to prevent incompatible extensions as it remains in common use.",\n            "type": "object",\n            "additionalProperties": { "$recursiveRef": "#" },\n            "default": {}\n        },\n        "dependencies": {\n            "$comment": "\\"dependencies\\" is no longer a keyword, but schema authors should avoid redefining it to facilitate a smooth transition to \\"dependentSchemas\\" and \\"dependentRequired\\"",\n            "type": "object",\n            "additionalProperties": {\n                "anyOf": [\n                    { "$recursiveRef": "#" },\n                    { "$ref": "meta/validation#/$defs/stringArray" }\n                ]\n            }\n        }\n    }\n}')),Ka.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2019-09/meta/core",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/2019-09/vocab/core": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Core vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "$id": {\n            "type": "string",\n            "format": "uri-reference",\n            "$comment": "Non-empty fragments not allowed.",\n            "pattern": "^[^#]*#?$"\n        },\n        "$schema": {\n            "type": "string",\n            "format": "uri"\n        },\n        "$anchor": {\n            "type": "string",\n            "pattern": "^[A-Za-z][-A-Za-z0-9.:_]*$"\n        },\n        "$ref": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$recursiveRef": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$recursiveAnchor": {\n            "type": "boolean",\n            "default": false\n        },\n        "$vocabulary": {\n            "type": "object",\n            "propertyNames": {\n                "type": "string",\n                "format": "uri"\n            },\n            "additionalProperties": {\n                "type": "boolean"\n            }\n        },\n        "$comment": {\n            "type": "string"\n        },\n        "$defs": {\n            "type": "object",\n            "additionalProperties": { "$recursiveRef": "#" },\n            "default": {}\n        }\n    }\n}')),Ua.defineVocabulary("https://json-schema.org/draft/2019-09/vocab/core",{validate:Ma.validate,$defs:Ma.definitions,$recursiveRef:Ma.dynamicRef,$ref:Ma.ref}),Ka.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2019-09/meta/applicator",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/2019-09/vocab/applicator": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Applicator vocabulary meta-schema",\n    "properties": {\n        "additionalItems": { "$recursiveRef": "#" },\n        "unevaluatedItems": { "$recursiveRef": "#" },\n        "items": {\n            "anyOf": [\n                { "$recursiveRef": "#" },\n                { "$ref": "#/$defs/schemaArray" }\n            ]\n        },\n        "contains": { "$recursiveRef": "#" },\n        "additionalProperties": { "$recursiveRef": "#" },\n        "unevaluatedProperties": { "$recursiveRef": "#" },\n        "properties": {\n            "type": "object",\n            "additionalProperties": { "$recursiveRef": "#" },\n            "default": {}\n        },\n        "patternProperties": {\n            "type": "object",\n            "additionalProperties": { "$recursiveRef": "#" },\n            "propertyNames": { "format": "regex" },\n            "default": {}\n        },\n        "dependentSchemas": {\n            "type": "object",\n            "additionalProperties": {\n                "$recursiveRef": "#"\n            }\n        },\n        "propertyNames": { "$recursiveRef": "#" },\n        "if": { "$recursiveRef": "#" },\n        "then": { "$recursiveRef": "#" },\n        "else": { "$recursiveRef": "#" },\n        "allOf": { "$ref": "#/$defs/schemaArray" },\n        "anyOf": { "$ref": "#/$defs/schemaArray" },\n        "oneOf": { "$ref": "#/$defs/schemaArray" },\n        "not": { "$recursiveRef": "#" }\n    },\n    "$defs": {\n        "schemaArray": {\n            "type": "array",\n            "minItems": 1,\n            "items": { "$recursiveRef": "#" }\n        }\n    }\n}')),Ua.defineVocabulary("https://json-schema.org/draft/2019-09/vocab/applicator",{additionalItems:Ma.additionalItems6,additionalProperties:Ma.additionalProperties6,allOf:Ma.allOf,anyOf:Ma.anyOf,contains:Ma.containsMinContainsMaxContains,dependentSchemas:Ma.dependentSchemas,if:Ma.ifThenElse,items:Ma.items,not:Ma.not,oneOf:Ma.oneOf,patternProperties:Ma.patternProperties,properties:Ma.properties,propertyNames:Ma.propertyNames,unevaluatedItems:Ma.unevaluatedItems,unevaluatedProperties:Ma.unevaluatedProperties}),Ka.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2019-09/meta/validation",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/2019-09/vocab/validation": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Validation vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "multipleOf": {\n            "type": "number",\n            "exclusiveMinimum": 0\n        },\n        "maximum": {\n            "type": "number"\n        },\n        "exclusiveMaximum": {\n            "type": ["number", "boolean"]\n        },\n        "minimum": {\n            "type": "number"\n        },\n        "exclusiveMinimum": {\n            "type": ["number", "boolean"]\n        },\n        "maxLength": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minLength": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "pattern": {\n            "type": "string",\n            "format": "regex"\n        },\n        "maxItems": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minItems": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "uniqueItems": {\n            "type": "boolean",\n            "default": false\n        },\n        "maxContains": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minContains": {\n            "$ref": "#/$defs/nonNegativeInteger",\n            "default": 1\n        },\n        "maxProperties": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minProperties": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "required": { "$ref": "#/$defs/stringArray" },\n        "dependentRequired": {\n            "type": "object",\n            "additionalProperties": {\n                "$ref": "#/$defs/stringArray"\n            }\n        },\n        "const": true,\n        "enum": {\n            "type": "array",\n            "items": true\n        },\n        "type": {\n            "anyOf": [\n                { "$ref": "#/$defs/simpleTypes" },\n                {\n                    "type": "array",\n                    "items": { "$ref": "#/$defs/simpleTypes" },\n                    "minItems": 1,\n                    "uniqueItems": true\n                }\n            ]\n        }\n    },\n    "allOf": [\n        {\n            "if": {\n                "properties": {\n                    "exclusiveMinimum": { "type": "boolean" }\n                },\n                "required": ["exclusiveMinimum"]\n            },\n            "then": {\n                "required": ["minimum"]\n            }\n        },\n        {\n            "if": {\n                "properties": {\n                    "exclusiveMaximum": { "type": "boolean" }\n                },\n                "required": ["exclusiveMaximum"]\n            },\n            "then": {\n                "required": ["maximum"]\n            }\n        }\n    ],\n    "$defs": {\n        "nonNegativeInteger": {\n            "type": "integer",\n            "minimum": 0\n        },\n        "nonNegativeIntegerDefault0": {\n            "$ref": "#/$defs/nonNegativeInteger",\n            "default": 0\n        },\n        "simpleTypes": {\n            "enum": [\n                "array",\n                "boolean",\n                "integer",\n                "null",\n                "number",\n                "object",\n                "string"\n            ]\n        },\n        "stringArray": {\n            "type": "array",\n            "items": { "type": "string" },\n            "uniqueItems": true,\n            "default": []\n        }\n    }\n}')),Ua.defineVocabulary("https://json-schema.org/draft/2019-09/vocab/validation",{const:Ma.const,dependentRequired:Ma.dependentRequired,enum:Ma.enum,exclusiveMaximum:Ma.exclusiveMaximum,exclusiveMinimum:Ma.exclusiveMinimum,maxItems:Ma.maxItems,maxLength:Ma.maxLength6,maxProperties:Ma.maxProperties,maximum:Ma.maximum,minItems:Ma.minItems,minLength:Ma.minLength6,minProperties:Ma.minProperties,minimum:Ma.minimum,multipleOf:Ma.multipleOf,pattern:Ma.pattern,required:Ma.required,type:Ma.type,uniqueItems:Ma.uniqueItems}),Ka.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2019-09/meta/meta-data",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/2019-09/vocab/meta-data": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Meta-data vocabulary meta-schema",\n\n    "type": ["object", "boolean"],\n    "properties": {\n        "title": {\n            "type": "string"\n        },\n        "description": {\n            "type": "string"\n        },\n        "default": true,\n        "deprecated": {\n            "type": "boolean",\n            "default": false\n        },\n        "readOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "writeOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "examples": {\n            "type": "array",\n            "items": true\n        }\n    }\n}')),Ua.defineVocabulary("https://json-schema.org/draft/2019-09/vocab/meta-data",{default:Ma.metaData,deprecated:Ma.metaData,description:Ma.metaData,examples:Ma.metaData,readOnly:Ma.metaData,title:Ma.metaData,writeOnly:Ma.metaData}),Ka.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2019-09/meta/format",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/2019-09/vocab/format": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Format vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "format": { "type": "string" }\n    }\n}')),Ka.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2019-09/meta/content",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/2019-09/vocab/content": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Content vocabulary meta-schema",\n\n    "type": ["object", "boolean"],\n    "properties": {\n        "contentMediaType": { "type": "string" },\n        "contentEncoding": { "type": "string" },\n        "contentSchema": { "$recursiveRef": "#" }\n    }\n}')),Ua.defineVocabulary("https://json-schema.org/draft/2019-09/vocab/content",{contentEncoding:Ma.metaData,contentMediaType:Ma.metaData,contentSchema:Ma.metaData});const{Core:Wa,Schema:Za}=Tt;var Qa={add:Za.add,get:Za.get,validate:Wa.validate,setMetaOutputFormat:Wa.setMetaOutputFormat,setShouldMetaValidate:Wa.setShouldMetaValidate,FLAG:Wa.FLAG,BASIC:Wa.BASIC,DETAILED:Wa.DETAILED,VERBOSE:Wa.VERBOSE};const Ya='(?:\\\\["\\/\\\\brfnt]|\\\\u[0-9a-fA-F]{4}|[^"\\\\])',ei=`"${Ya}*"`,ti=`"${Ya}*"(?=\\s*:)`;var ni=_((function(e){var t,n;t=L,n=function(){var e=Object.prototype.hasOwnProperty,t=Object.prototype.toString,n="boolean"==typeof(new RegExp).sticky;function r(e){return e&&"[object RegExp]"===t.call(e)}function a(e){return e&&"object"==typeof e&&!r(e)&&!Array.isArray(e)}function i(e){return"("+e+")"}function s(e){return e.length?"(?:"+e.map((function(e){return"(?:"+e+")"})).join("|")+")":"(?!)"}function o(e){if("string"==typeof e)return"(?:"+e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")+")";if(r(e)){if(e.ignoreCase)throw new Error("RegExp /i flag not allowed");if(e.global)throw new Error("RegExp /g flag is implied");if(e.sticky)throw new Error("RegExp /y flag is implied");if(e.multiline)throw new Error("RegExp /m flag is implied");return e.source}throw new Error("Not a pattern: "+e)}function c(t,n){if(a(n)||(n={match:n}),n.include)throw new Error("Matching rules cannot also include states");var i={defaultType:t,lineBreaks:!!n.error||!!n.fallback,pop:!1,next:null,push:null,error:!1,fallback:!1,value:null,type:null,shouldThrow:!1};for(var s in n)e.call(n,s)&&(i[s]=n[s]);if("string"==typeof i.type&&t!==i.type)throw new Error("Type transform cannot be a string (type '"+i.type+"' for token '"+t+"')");var o=i.match;return i.match=Array.isArray(o)?o:o?[o]:[],i.match.sort((function(e,t){return r(e)&&r(t)?0:r(t)?-1:r(e)?1:t.length-e.length})),i}function l(e){return Array.isArray(e)?function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];if(r.include)for(var a=[].concat(r.include),i=0;i<a.length;i++)t.push({include:a[i]});else{if(!r.type)throw new Error("Rule has no type: "+JSON.stringify(r));t.push(c(r.type,r))}}return t}(e):function(e){for(var t=Object.getOwnPropertyNames(e),n=[],r=0;r<t.length;r++){var i=t[r],s=e[i],o=[].concat(s);if("include"!==i){var l=[];o.forEach((function(e){a(e)?(l.length&&n.push(c(i,l)),n.push(c(i,e)),l=[]):l.push(e)})),l.length&&n.push(c(i,l))}else for(var p=0;p<o.length;p++)n.push({include:o[p]})}return n}(e)}var p=c("error",{lineBreaks:!0,shouldThrow:!0});function m(e,t){for(var a=null,c=Object.create(null),l=!0,m=null,u=[],f=[],d=0;d<e.length;d++)e[d].fallback&&(l=!1);for(d=0;d<e.length;d++){var h=e[d];if(h.include)throw new Error("Inheritance is not allowed in stateless lexers");if(h.error||h.fallback){if(a)throw!h.fallback==!a.fallback?new Error("Multiple "+(h.fallback?"fallback":"error")+" rules not allowed (for token '"+h.defaultType+"')"):new Error("fallback and error are mutually exclusive (for token '"+h.defaultType+"')");a=h}var y=h.match.slice();if(l)for(;y.length&&"string"==typeof y[0]&&1===y[0].length;)c[y.shift().charCodeAt(0)]=h;if(h.pop||h.push||h.next){if(!t)throw new Error("State-switching options are not allowed in stateless lexers (for token '"+h.defaultType+"')");if(h.fallback)throw new Error("State-switching options are not allowed on fallback tokens (for token '"+h.defaultType+"')")}if(0!==y.length){l=!1,u.push(h);for(var v=0;v<y.length;v++){var g=y[v];if(r(g))if(null===m)m=g.unicode;else if(m!==g.unicode&&!1===h.fallback)throw new Error("If one rule is /u then all must be")}var b=s(y.map(o)),$=new RegExp(b);if($.test(""))throw new Error("RegExp matches empty string: "+$);if(new RegExp("|"+b).exec("").length-1>0)throw new Error("RegExp has capture groups: "+$+"\nUse (?: … ) instead");if(!h.lineBreaks&&$.test("\n"))throw new Error("Rule should declare lineBreaks: "+$);f.push(i(b))}}var x=a&&a.fallback,O=n&&!x?"ym":"gm",I=n||x?"":"|";return!0===m&&(O+="u"),{regexp:new RegExp(s(f)+I,O),groups:u,fast:c,error:a||p}}function u(e,t,n){var r=e&&(e.push||e.next);if(r&&!n[r])throw new Error("Missing state '"+r+"' (in token '"+e.defaultType+"' of state '"+t+"')");if(e&&e.pop&&1!=+e.pop)throw new Error("pop must be 1 (in token '"+e.defaultType+"' of state '"+t+"')")}var f=function(e,t){this.startState=t,this.states=e,this.buffer="",this.stack=[],this.reset()};f.prototype.reset=function(e,t){return this.buffer=e||"",this.index=0,this.line=t?t.line:1,this.col=t?t.col:1,this.queuedToken=t?t.queuedToken:null,this.queuedThrow=t?t.queuedThrow:null,this.setState(t?t.state:this.startState),this.stack=t&&t.stack?t.stack.slice():[],this},f.prototype.save=function(){return{line:this.line,col:this.col,state:this.state,stack:this.stack.slice(),queuedToken:this.queuedToken,queuedThrow:this.queuedThrow}},f.prototype.setState=function(e){if(e&&this.state!==e){this.state=e;var t=this.states[e];this.groups=t.groups,this.error=t.error,this.re=t.regexp,this.fast=t.fast}},f.prototype.popState=function(){this.setState(this.stack.pop())},f.prototype.pushState=function(e){this.stack.push(this.state),this.setState(e)};var d=n?function(e,t){return e.exec(t)}:function(e,t){var n=e.exec(t);return 0===n[0].length?null:n};function h(){return this.value}if(f.prototype._getGroup=function(e){for(var t=this.groups.length,n=0;n<t;n++)if(void 0!==e[n+1])return this.groups[n];throw new Error("Cannot find token type for matched text")},f.prototype.next=function(){var e=this.index;if(this.queuedGroup){var t=this._token(this.queuedGroup,this.queuedText,e);return this.queuedGroup=null,this.queuedText="",t}var n=this.buffer;if(e!==n.length){if(s=this.fast[n.charCodeAt(e)])return this._token(s,n.charAt(e),e);var r=this.re;r.lastIndex=e;var a=d(r,n),i=this.error;if(null==a)return this._token(i,n.slice(e,n.length),e);var s=this._getGroup(a),o=a[0];return i.fallback&&a.index!==e?(this.queuedGroup=s,this.queuedText=o,this._token(i,n.slice(e,a.index),e)):this._token(s,o,e)}},f.prototype._token=function(e,t,n){var r=0;if(e.lineBreaks){var a=/\n/g,i=1;if("\n"===t)r=1;else for(;a.exec(t);)r++,i=a.lastIndex}var s={type:"function"==typeof e.type&&e.type(t)||e.defaultType,value:"function"==typeof e.value?e.value(t):t,text:t,toString:h,offset:n,lineBreaks:r,line:this.line,col:this.col},o=t.length;if(this.index+=o,this.line+=r,0!==r?this.col=o-i+1:this.col+=o,e.shouldThrow)throw new Error(this.formatError(s,"invalid syntax"));return e.pop?this.popState():e.push?this.pushState(e.push):e.next&&this.setState(e.next),s},"undefined"!=typeof Symbol&&Symbol.iterator){var y=function(e){this.lexer=e};y.prototype.next=function(){var e=this.lexer.next();return{value:e,done:!e}},y.prototype[Symbol.iterator]=function(){return this},f.prototype[Symbol.iterator]=function(){return new y(this)}}return f.prototype.formatError=function(e,t){if(null==e){var n=this.buffer.slice(this.index);e={text:n,offset:this.index,lineBreaks:-1===n.indexOf("\n")?0:1,line:this.line,col:this.col}}var r=Math.max(0,e.offset-e.col+1),a=e.lineBreaks?e.text.indexOf("\n"):e.text.length,i=this.buffer.substring(r,e.offset+a);return t+=" at line "+e.line+" col "+e.col+":\n\n",t+="  "+i+"\n",t+="  "+Array(e.col).join(" ")+"^"},f.prototype.clone=function(){return new f(this.states,this.state)},f.prototype.has=function(e){return!0},{compile:function(e){var t=m(l(e));return new f({start:t},"start")},states:function(e,t){var n=e.$all?l(e.$all):[];delete e.$all;var r=Object.getOwnPropertyNames(e);t||(t=r[0]);for(var a=Object.create(null),i=0;i<r.length;i++)a[b=r[i]]=l(e[b]).concat(n);for(i=0;i<r.length;i++)for(var s=a[b=r[i]],o=Object.create(null),c=0;c<s.length;c++){var p=s[c];if(p.include){var d=[c,1];if(p.include!==b&&!o[p.include]){o[p.include]=!0;var h=a[p.include];if(!h)throw new Error("Cannot include nonexistent state '"+p.include+"' (in state '"+b+"')");for(var y=0;y<h.length;y++){var v=h[y];-1===s.indexOf(v)&&d.push(v)}}s.splice.apply(s,d),c--}}var g=Object.create(null);for(i=0;i<r.length;i++){var b;g[b=r[i]]=m(a[b],!0)}for(i=0;i<r.length;i++){var $=r[i],x=g[$],O=x.groups;for(c=0;c<O.length;c++)u(O[c],$,g);var I=Object.getOwnPropertyNames(x.fast);for(c=0;c<I.length;c++)u(x.fast[I[c]],$,g)}return new f(g,t)},error:Object.freeze({error:!0}),fallback:Object.freeze({fallback:!0}),keywords:function(e){for(var t=Object.create(null),n=Object.create(null),r=Object.getOwnPropertyNames(e),a=0;a<r.length;a++){var i=r[a],s=e[i];(Array.isArray(s)?s:[s]).forEach((function(e){if((n[e.length]=n[e.length]||[]).push(e),"string"!=typeof e)throw new Error("keyword must be string (in keyword '"+i+"')");t[e]=i}))}function o(e){return JSON.stringify(e)}var c="";for(var l in c+="switch (value.length) {\n",n){var p=n[l];c+="case "+l+":\n",c+="switch (value) {\n",p.forEach((function(e){var n=t[e];c+="case "+o(e)+": return "+o(n)+"\n"})),c+="}\n"}return c+="}\n",Function("value",c)}}},e.exports?e.exports=n():t.moo=n()})).compile({WS:{match:/(?:(?:\r?\n)|[ \t])+/,lineBreaks:!0},punctuation:/[:,]/,number:new RegExp("-?(?:0|[1-9][0-9]*)(?:\\.[0-9]+)?(?:[eE][-+][0-9]+)?"),property:new RegExp(ti),string:new RegExp(ei),grouping:["{","}","[","]"],boolean:["true","false"],null:["null"],other:/./});function ri(e,t,n){const r=e.slice();return r[9]=t[n],r}function ai(e,t,n){const r=e.slice();return r[12]=t[n],r[14]=n,r}function ii(e){let t,n,f=e[14]+1+"";return{c(){t=r("div"),n=a(f),this.h()},l(e){t=i(e,"DIV",{class:!0});var r=s(t);n=o(r,f),r.forEach(c),this.h()},h(){l(t,"class","svelte-o0qsb5")},m(e,r){p(e,t,r),m(t,n)},p:u,d(e){e&&c(t)}}}function si(e){let t,n=e[9].value+"";return{c(){t=a(n)},l(e){t=o(e,n)},m(e,n){p(e,t,n)},p(e,r){16&r&&n!==(n=e[9].value+"")&&O(t,n)},d(e){e&&c(t)}}}function oi(e){let t,n,u=e[9].value+"";return{c(){t=r("span"),n=a(u),this.h()},l(e){t=i(e,"SPAN",{class:!0});var r=s(t);n=o(r,u),r.forEach(c),this.h()},h(){l(t,"class","null svelte-o0qsb5")},m(e,r){p(e,t,r),m(t,n)},p(e,t){16&t&&u!==(u=e[9].value+"")&&O(n,u)},d(e){e&&c(t)}}}function ci(e){let t,n,u=e[9].value+"";return{c(){t=r("span"),n=a(u),this.h()},l(e){t=i(e,"SPAN",{class:!0});var r=s(t);n=o(r,u),r.forEach(c),this.h()},h(){l(t,"class","boolean svelte-o0qsb5")},m(e,r){p(e,t,r),m(t,n)},p(e,t){16&t&&u!==(u=e[9].value+"")&&O(n,u)},d(e){e&&c(t)}}}function li(e){let t,n,u=e[9].value+"";return{c(){t=r("span"),n=a(u),this.h()},l(e){t=i(e,"SPAN",{class:!0});var r=s(t);n=o(r,u),r.forEach(c),this.h()},h(){l(t,"class","number svelte-o0qsb5")},m(e,r){p(e,t,r),m(t,n)},p(e,t){16&t&&u!==(u=e[9].value+"")&&O(n,u)},d(e){e&&c(t)}}}function pi(e){let t,n,u,f,d=e[9].value.substring(1,e[9].value.length-1)+"";return{c(){t=a('"'),n=r("span"),u=a(d),f=a('"'),this.h()},l(e){t=o(e,'"'),n=i(e,"SPAN",{class:!0});var r=s(n);u=o(r,d),r.forEach(c),f=o(e,'"'),this.h()},h(){l(n,"class","string svelte-o0qsb5")},m(e,r){p(e,t,r),p(e,n,r),m(n,u),p(e,f,r)},p(e,t){16&t&&d!==(d=e[9].value.substring(1,e[9].value.length-1)+"")&&O(u,d)},d(e){e&&c(t),e&&c(n),e&&c(f)}}}function mi(e){let t,n,u,f,d=e[9].value.substring(1,e[9].value.length-1)+"";return{c(){t=a('"'),n=r("span"),u=a(d),f=a('"'),this.h()},l(e){t=o(e,'"'),n=i(e,"SPAN",{class:!0});var r=s(n);u=o(r,d),r.forEach(c),f=o(e,'"'),this.h()},h(){l(n,"class","property svelte-o0qsb5")},m(e,r){p(e,t,r),p(e,n,r),m(n,u),p(e,f,r)},p(e,t){16&t&&d!==(d=e[9].value.substring(1,e[9].value.length-1)+"")&&O(u,d)},d(e){e&&c(t),e&&c(n),e&&c(f)}}}function ui(e){let t,n,u=e[9].value+"";return{c(){t=r("span"),n=a(u),this.h()},l(e){t=i(e,"SPAN",{class:!0});var r=s(t);n=o(r,u),r.forEach(c),this.h()},h(){l(t,"class","grouping svelte-o0qsb5")},m(e,r){p(e,t,r),m(t,n)},p(e,t){16&t&&u!==(u=e[9].value+"")&&O(n,u)},d(e){e&&c(t)}}}function fi(e){let t;function n(e,t){return"grouping"===e[9].type?ui:"property"===e[9].type?mi:"string"===e[9].type?pi:"number"===e[9].type?li:"boolean"===e[9].type?ci:"null"===e[9].type?oi:si}let r=n(e),a=r(e);return{c(){a.c(),t=f()},l(e){a.l(e),t=f()},m(e,n){a.m(e,n),p(e,t,n)},p(e,i){r===(r=n(e))&&a?a.p(e,i):(a.d(1),a=r(e),a&&(a.c(),a.m(t.parentNode,t)))},d(e){a.d(e),e&&c(t)}}}function di(e){let t,n,a,o,f,$,x,O,I,S,E=[...Array(e[3])],w=[];for(let t=0;t<E.length;t+=1)w[t]=ii(ai(e,E,t));let j=e[4],P=[];for(let t=0;t<j.length;t+=1)P[t]=fi(ri(e,j,t));return{c(){t=r("div"),n=r("div");for(let e=0;e<w.length;e+=1)w[e].c();a=d(),o=r("div"),f=r("pre");for(let e=0;e<P.length;e+=1)P[e].c();$=d(),x=r("textarea"),this.h()},l(e){t=i(e,"DIV",{class:!0});var r=s(t);n=i(r,"DIV",{class:!0});var l=s(n);for(let e=0;e<w.length;e+=1)w[e].l(l);l.forEach(c),a=h(r),o=i(r,"DIV",{class:!0});var p=s(o);f=i(p,"PRE",{class:!0});var m=s(f);for(let e=0;e<P.length;e+=1)P[e].l(m);m.forEach(c),$=h(p),x=i(p,"TEXTAREA",{class:!0,"aria-label":!0}),s(x).forEach(c),p.forEach(c),r.forEach(c),this.h()},h(){l(n,"class","line-numbers svelte-o0qsb5"),l(f,"class","highlighted svelte-o0qsb5"),l(x,"class","src svelte-o0qsb5"),l(x,"aria-label","Code Editor"),l(o,"class","editable svelte-o0qsb5"),l(t,"class",O="Editor "+e[1]+" svelte-o0qsb5")},m(r,i){p(r,t,i),m(t,n);for(let e=0;e<w.length;e+=1)w[e].m(n,null);m(t,a),m(t,o),m(o,f);for(let e=0;e<P.length;e+=1)P[e].m(f,null);m(o,$),m(o,x),e[7](x),y(x,e[0]),I||(S=[v(x,"input",e[8]),v(x,"input",e[6])],I=!0)},p(e,[r]){if(8&r){let t;for(E=[...Array(e[3])],t=0;t<E.length;t+=1){const a=ai(e,E,t);w[t]?w[t].p(a,r):(w[t]=ii(a),w[t].c(),w[t].m(n,null))}for(;t<w.length;t+=1)w[t].d(1);w.length=E.length}if(16&r){let t;for(j=e[4],t=0;t<j.length;t+=1){const n=ri(e,j,t);P[t]?P[t].p(n,r):(P[t]=fi(n),P[t].c(),P[t].m(f,null))}for(;t<P.length;t+=1)P[t].d(1);P.length=j.length}1&r&&y(x,e[0]),2&r&&O!==(O="Editor "+e[1]+" svelte-o0qsb5")&&l(t,"class",O)},i:u,o:u,d(n){n&&c(t),g(w,n),g(P,n),e[7](null),I=!1,b(S)}}}function hi(e,t,n){let r,{theme:a="solarized-dark"}=t,{value:i=""}=t;let s,o;return e.$$set=e=>{"theme"in e&&n(1,a=e.theme),"value"in e&&n(0,i=e.value)},e.$$.update=()=>{1&e.$$.dirty&&n(3,s=(i.match(/\n/g)||[]).length+1),1&e.$$.dirty&&n(4,(ni.reset(i),o=Array.from(ni)))},[i,a,r,s,o,()=>{r.focus()},function(t){$(e,t)},function(e){x[e?"unshift":"push"](()=>{r=e,n(2,r)})},function(){i=this.value,n(0,i)}]}class yi extends e{constructor(e){super(),t(this,e,hi,di,n,{theme:1,value:0,focus:5})}get focus(){return this.$$.ctx[5]}}function vi(e,t,n){const r=e.slice();return r[16]=t[n],r[18]=n,r}function gi(e){let t,n,u,f;function d(...t){return e[11](e[18],...t)}return{c(){t=r("button"),n=a("×"),this.h()},l(e){t=i(e,"BUTTON",{class:!0});var r=s(t);n=o(r,"×"),r.forEach(c),this.h()},h(){l(t,"class","tab-close svelte-1ylgy73")},m(e,r){p(e,t,r),m(t,n),u||(f=v(t,"click",d),u=!0)},p(t,n){e=t},d(e){e&&c(t),u=!1,f()}}}function bi(e){let t,n,u,f,y,g,b,$,x=e[16].label+"",S=!e[16].persistent&&e[0].length>e[5]&&gi(e);function E(...t){return e[12](e[18],...t)}return{c(){t=r("button"),n=r("span"),u=a(x),f=d(),S&&S.c(),this.h()},l(e){t=i(e,"BUTTON",{role:!0,id:!0,"aria-selected":!0,"aria-controls":!0,class:!0});var r=s(t);n=i(r,"SPAN",{class:!0});var a=s(n);u=o(a,x),a.forEach(c),f=h(r),S&&S.l(r),r.forEach(c),this.h()},h(){l(n,"class","tab-label svelte-1ylgy73"),l(t,"role","tab"),l(t,"id",y=`${e[2]}-tab-${e[18]}`),l(t,"aria-selected",g=e[18]===e[1]),l(t,"aria-controls","tabpanel"),l(t,"class","svelte-1ylgy73"),I(t,"active",e[18]===e[4])},m(e,r){p(e,t,r),m(t,n),m(n,u),m(t,f),S&&S.m(t,null),b||($=v(t,"click",E),b=!0)},p(n,r){e=n,1&r&&x!==(x=e[16].label+"")&&O(u,x),!e[16].persistent&&e[0].length>e[5]?S?S.p(e,r):(S=gi(e),S.c(),S.m(t,null)):S&&(S.d(1),S=null),4&r&&y!==(y=`${e[2]}-tab-${e[18]}`)&&l(t,"id",y),2&r&&g!==(g=e[18]===e[1])&&l(t,"aria-selected",g),16&r&&I(t,"active",e[18]===e[4])},d(e){e&&c(t),S&&S.d(),b=!1,$()}}}function $i(e){let t,n,u,f,d,h;return{c(){t=r("button"),n=r("span"),u=a("+"),this.h()},l(e){t=i(e,"BUTTON",{role:!0,id:!0,class:!0});var r=s(t);n=i(r,"SPAN",{class:!0});var a=s(n);u=o(a,"+"),a.forEach(c),r.forEach(c),this.h()},h(){l(n,"class","tab-label svelte-1ylgy73"),l(t,"role","tab"),l(t,"id",f=`${e[2]}-tab-${e[0].length}`),l(t,"class","svelte-1ylgy73")},m(r,a){p(r,t,a),m(t,n),m(n,u),d||(h=v(t,"click",e[9]),d=!0)},p(e,n){5&n&&f!==(f=`${e[2]}-tab-${e[0].length}`)&&l(t,"id",f)},d(e){e&&c(t),d=!1,h()}}}function xi(e){let t,n,a,o,u,f,y,v,b=e[0],$=[];for(let t=0;t<b.length;t+=1)$[t]=bi(vi(e,b,t));let O=e[3]&&$i(e);function I(t){e[14].call(null,t)}let C={};return void 0!==e[0][e[1]].text&&(C.value=e[0][e[1]].text),u=new yi({props:C}),e[13](u),x.push(()=>S(u,"value",I)),u.$on("input",e[15]),{c(){t=r("div");for(let e=0;e<$.length;e+=1)$[e].c();n=d(),O&&O.c(),a=d(),o=r("div"),E(u.$$.fragment),this.h()},l(e){t=i(e,"DIV",{role:!0,class:!0});var r=s(t);for(let e=0;e<$.length;e+=1)$[e].l(r);n=h(r),O&&O.l(r),r.forEach(c),a=h(e),o=i(e,"DIV",{role:!0,id:!0,"aria-labelledby":!0,class:!0});var l=s(o);w(u.$$.fragment,l),l.forEach(c),this.h()},h(){l(t,"role","tablist"),l(t,"class","svelte-1ylgy73"),l(o,"role","tabpanel"),l(o,"id","tabpanel"),l(o,"aria-labelledby",y=`${e[2]}-tab-${e[1]}`),l(o,"class","svelte-1ylgy73")},m(e,r){p(e,t,r);for(let e=0;e<$.length;e+=1)$[e].m(t,null);m(t,n),O&&O.m(t,null),p(e,a,r),p(e,o,r),j(u,o,null),v=!0},p(e,[r]){if(1335&r){let a;for(b=e[0],a=0;a<b.length;a+=1){const i=vi(e,b,a);$[a]?$[a].p(i,r):($[a]=bi(i),$[a].c(),$[a].m(t,n))}for(;a<$.length;a+=1)$[a].d(1);$.length=b.length}e[3]?O?O.p(e,r):(O=$i(e),O.c(),O.m(t,null)):O&&(O.d(1),O=null);const a={};!f&&3&r&&(f=!0,a.value=e[0][e[1]].text,P(()=>f=!1)),u.$set(a),(!v||6&r&&y!==(y=`${e[2]}-tab-${e[1]}`))&&l(o,"aria-labelledby",y)},i(e){v||(A(u.$$.fragment,e),v=!0)},o(e){k(u.$$.fragment,e),v=!1},d(n){n&&c(t),g($,n),O&&O.d(),n&&c(a),n&&c(o),e[13](null),T(u)}}}function Oi(e,t,n){let r,{ns:a=""}=t,{tabs:i=[]}=t,{newTab:s}=t,{active:o=0}=t,{selected:c=0}=t,{minTabs:l=1}=t;const p=C();function m(e){n(1,c=e),r.focus()}function u(e){c>=e&&c>0&&n(1,c-=1),i.splice(e,1),n(0,i),r.focus()}return e.$$set=e=>{"ns"in e&&n(2,a=e.ns),"tabs"in e&&n(0,i=e.tabs),"newTab"in e&&n(3,s=e.newTab),"active"in e&&n(4,o=e.active),"selected"in e&&n(1,c=e.selected),"minTabs"in e&&n(5,l=e.minTabs)},[i,c,a,s,o,l,r,p,m,function(){n(0,i[i.length]=s(),i),n(1,c=i.length-1),r.focus()},u,e=>u(e),e=>m(e),function(e){x[e?"unshift":"push"](()=>{r=e,n(6,r)})},function(e){i[c].text=e,n(0,i)},e=>p("input",i)]}class Ii extends e{constructor(e){super(),t(this,e,Oi,xi,n,{ns:2,tabs:0,newTab:3,active:4,selected:1,minTabs:5})}}function Si(e,t,n){const r=e.slice();return r[2]=t[n],r}function Ei(e){let t;function n(e,t){return e[1].output?ji:wi}let r=n(e),a=r(e);return{c(){a.c(),t=f()},l(e){a.l(e),t=f()},m(e,n){a.m(e,n),p(e,t,n)},p(e,i){r===(r=n(e))&&a?a.p(e,i):(a.d(1),a=r(e),a&&(a.c(),a.m(t.parentNode,t)))},d(e){a.d(e),e&&c(t)}}}function wi(e){let t,n=e[1]+"";return{c(){t=a(n)},l(e){t=o(e,n)},m(e,n){p(e,t,n)},p(e,r){1&r&&n!==(n=e[1]+"")&&O(t,n)},d(e){e&&c(t)}}}function ji(e){let t,n,l=e[1].output.errors,m=[];for(let t=0;t<l.length;t+=1)m[t]=Ai(Si(e,l,t));return{c(){t=a("Invalid\n    "),n=r("ul");for(let e=0;e<m.length;e+=1)m[e].c()},l(e){t=o(e,"Invalid\n    "),n=i(e,"UL",{});var r=s(n);for(let e=0;e<m.length;e+=1)m[e].l(r);r.forEach(c)},m(e,r){p(e,t,r),p(e,n,r);for(let e=0;e<m.length;e+=1)m[e].m(n,null)},p(e,t){if(1&t){let r;for(l=e[1].output.errors,r=0;r<l.length;r+=1){const a=Si(e,l,r);m[r]?m[r].p(a,t):(m[r]=Ai(a),m[r].c(),m[r].m(n,null))}for(;r<m.length;r+=1)m[r].d(1);m.length=l.length}},d(e){e&&c(t),e&&c(n),g(m,e)}}}function Pi(e){let t,n,u,f,d,h,y=e[2].instanceLocation+"",v=e[2].absoluteKeywordLocation+"";return{c(){t=r("li"),n=r("code"),u=a(y),f=a(" fails schema constraint "),d=r("code"),h=a(v),this.h()},l(e){t=i(e,"LI",{class:!0});var r=s(t);n=i(r,"CODE",{class:!0});var a=s(n);u=o(a,y),a.forEach(c),f=o(r," fails schema constraint "),d=i(r,"CODE",{class:!0});var l=s(d);h=o(l,v),l.forEach(c),r.forEach(c),this.h()},h(){l(n,"class","svelte-1sdf2dp"),l(d,"class","svelte-1sdf2dp"),l(t,"class","svelte-1sdf2dp")},m(e,r){p(e,t,r),m(t,n),m(n,u),m(t,f),m(t,d),m(d,h)},p(e,t){1&t&&y!==(y=e[2].instanceLocation+"")&&O(u,y),1&t&&v!==(v=e[2].absoluteKeywordLocation+"")&&O(h,v)},d(e){e&&c(t)}}}function Ai(e){let t,n=!e[2].valid&&Pi(e);return{c(){n&&n.c(),t=f()},l(e){n&&n.l(e),t=f()},m(e,r){n&&n.m(e,r),p(e,t,r)},p(e,r){e[2].valid?n&&(n.d(1),n=null):n?n.p(e,r):(n=Pi(e),n.c(),n.m(t.parentNode,t))},d(e){n&&n.d(e),e&&c(t)}}}function ki(e){let t,n=e[0]?"Valid":"";return{c(){t=a(n)},l(e){t=o(e,n)},m(e,n){p(e,t,n)},p(e,r){1&r&&n!==(n=e[0]?"Valid":"")&&O(t,n)},d(e){e&&c(t)}}}function Ti(e){let t;return{c(){t=a("Validating ...")},l(e){t=o(e,"Validating ...")},m(e,n){p(e,t,n)},p:u,d(e){e&&c(t)}}}function Ci(e){let t,n,r={ctx:e,current:null,token:null,pending:Ti,then:ki,catch:Ei,value:0,error:1};return N(n=e[0],r),{c(){t=f(),r.block.c()},l(e){t=f(),r.block.l(e)},m(e,n){p(e,t,n),r.block.m(e,r.anchor=n),r.mount=()=>t.parentNode,r.anchor=t},p(t,[a]){if(e=t,r.ctx=e,1&a&&n!==(n=e[0])&&N(n,r));else{const t=e.slice();t[0]=r.resolved,r.block.p(t,a)}},i:u,o:u,d(e){e&&c(t),r.block.d(e),r.token=null,r=null}}}function Ni(e,t,n){let{results:r}=t;return e.$$set=e=>{"results"in e&&n(0,r=e.results)},[r]}class Ri extends e{constructor(e){super(),t(this,e,Ni,Ci,n,{results:0})}}function qi(e){let t,n,a,o,u;const f=e[2].default,y=R(f,e,e[1],null);return{c(){t=r("a"),n=q("svg"),a=q("path"),o=d(),y&&y.c(),this.h()},l(e){t=i(e,"A",{href:!0,class:!0});var r=s(t);n=i(r,"svg",{height:!0,viewBox:!0,version:!0,"aria-hidden":!0,class:!0},1);var l=s(n);a=i(l,"path",{"fill-rule":!0,d:!0},1),s(a).forEach(c),l.forEach(c),o=h(r),y&&y.l(r),r.forEach(c),this.h()},h(){l(a,"fill-rule","evenodd"),l(a,"d","M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"),l(n,"height","1.5em"),l(n,"viewBox","0 0 16 16"),l(n,"version","1.1"),l(n,"aria-hidden","true"),l(n,"class","svelte-i8toq"),l(t,"href",e[0]),l(t,"class","svelte-i8toq")},m(e,r){p(e,t,r),m(t,n),m(n,a),m(t,o),y&&y.m(t,null),u=!0},p(e,[n]){y&&y.p&&2&n&&M(y,f,e,e[1],n,null,null),(!u||1&n)&&l(t,"href",e[0])},i(e){u||(A(y,e),u=!0)},o(e){k(y,e),u=!1},d(e){e&&c(t),y&&y.d(e)}}}function Mi(e,t,n){let{href:r=""}=t,{$$slots:a={},$$scope:i}=t;return e.$$set=e=>{"href"in e&&n(0,r=e.href),"$$scope"in e&&n(1,i=e.$$scope)},[r,i,a]}class Di extends e{constructor(e){super(),t(this,e,Mi,qi,n,{href:0})}}function Vi(e){let t,n,a,o,u;const f=e[2].default,y=R(f,e,e[1],null);return{c(){t=r("a"),n=q("svg"),a=q("path"),o=d(),y&&y.c(),this.h()},l(e){t=i(e,"A",{href:!0,class:!0});var r=s(t);n=i(r,"svg",{height:!0,viewBox:!0,version:!0,"aria-hidden":!0,class:!0},1);var l=s(n);a=i(l,"path",{d:!0},1),s(a).forEach(c),l.forEach(c),o=h(r),y&&y.l(r),r.forEach(c),this.h()},h(){l(a,"d","M240,250h100v-50h100V0H240V250z M340,50h50v100h-50V50z M480,0v200h100V50h50v150h50V50h50v150h50V0H480z M0,200h100V50h50v150h50V0H0V200z"),l(n,"height","1em"),l(n,"viewBox","0 0 780 250"),l(n,"version","1.1"),l(n,"aria-hidden","true"),l(n,"class","svelte-wj8h0n"),l(t,"href",e[0]),l(t,"class","svelte-wj8h0n")},m(e,r){p(e,t,r),m(t,n),m(n,a),m(t,o),y&&y.m(t,null),u=!0},p(e,[n]){y&&y.p&&2&n&&M(y,f,e,e[1],n,null,null),(!u||1&n)&&l(t,"href",e[0])},i(e){u||(A(y,e),u=!0)},o(e){k(y,e),u=!1},d(e){e&&c(t),y&&y.d(e)}}}function Li(e,t,n){let{href:r=""}=t,{$$slots:a={},$$scope:i}=t;return e.$$set=e=>{"href"in e&&n(0,r=e.href),"$$scope"in e&&n(1,i=e.$$scope)},[r,i,a]}class _i extends e{constructor(e){super(),t(this,e,Li,Vi,n,{href:0})}}function Ji(e){let t,n,a,o,u,f,y,v,g;const b=e[2].default,$=R(b,e,e[1],null);return{c(){t=r("a"),n=q("svg"),a=q("g"),o=q("path"),u=q("path"),f=q("path"),y=q("path"),v=d(),$&&$.c(),this.h()},l(e){t=i(e,"A",{href:!0,class:!0});var r=s(t);n=i(r,"svg",{version:!0,viewBox:!0,height:!0,class:!0},1);var l=s(n);a=i(l,"g",{transform:!0,id:!0},1);var p=s(a);o=i(p,"path",{id:!0,d:!0,style:!0},1),s(o).forEach(c),u=i(p,"path",{id:!0,d:!0,style:!0},1),s(u).forEach(c),f=i(p,"path",{id:!0,d:!0,style:!0},1),s(f).forEach(c),y=i(p,"path",{id:!0,d:!0,style:!0},1),s(y).forEach(c),p.forEach(c),l.forEach(c),v=h(r),$&&$.l(r),r.forEach(c),this.h()},h(){l(o,"id","path4544"),l(o,"d","m 122.99401,114.18985 c -4.32897,-0.9404 -7.58044,-3.47848 -8.71251,-6.80095 -0.78921,-2.31618 -0.67682,-6.07238 0.33363,-11.150598 0.48507,-2.437836 0.88169,-5.347843 0.88139,-6.466688 -9.8e-4,-3.718098 -1.71106,-5.735418 -5.1001,-6.016462 l -1.9549,-0.162116 v -2.392655 -2.392657 l 1.85208,-0.250855 c 2.70243,-0.366031 3.74441,-1.02838 4.57629,-2.908984 0.61121,-1.381726 0.68884,-2.068648 0.50552,-4.472869 -0.11913,-1.562244 -0.53527,-4.348568 -0.92477,-6.191832 -0.98954,-4.682868 -0.94822,-8.485471 0.11707,-10.773163 1.56862,-3.368589 5.43705,-5.854553 9.93248,-6.382903 l 1.93299,-0.227185 v 2.518015 2.518015 h -1.29973 c -1.77186,0 -4.2497,1.262413 -4.8835,2.488054 -0.60797,1.175674 -0.65405,2.864146 -0.15834,5.802223 0.78343,4.643508 1.04707,9.098344 0.67592,11.421636 -0.42464,2.658142 -1.97477,5.796328 -3.6791,7.448236 l -1.18012,1.143813 1.61497,1.982752 c 1.99051,2.443801 2.76458,4.148744 3.24284,7.142561 0.37835,2.368341 0.0844,7.282673 -0.67072,11.213982 -1.05359,5.48514 0.1623,7.65141 4.66209,8.30613 l 1.67569,0.24382 v 2.44782 c 0,2.79211 0.17086,2.69708 -3.43917,1.91286 z"),D(o,"fill","stroke-width:0.35277775"),l(u,"id","path4546"),l(u,"d","m 152.2304,112.24932 v -2.42987 l 2.04969,-0.42336 c 2.26276,-0.46736 4.054,-1.8634 4.45842,-3.47475 0.1274,-0.50758 -0.11267,-3.16398 -0.53347,-5.90311 -1.37183,-8.929552 -0.6114,-13.537042 2.85482,-17.297452 l 1.48237,-1.60818 -1.1108,-1.26512 c -3.97855,-4.53132 -4.66885,-8.552208 -3.15364,-18.369547 0.76342,-4.946305 0.76409,-4.994322 0.087,-6.173611 -0.79713,-1.388278 -3.28385,-2.776033 -4.97438,-2.776033 h -1.15997 v -2.469445 c 0,-2.811057 -0.0583,-2.773846 3.24583,-2.072788 3.9645,0.841179 6.80448,2.853272 8.27787,5.864775 0.84544,1.728026 0.97275,2.400136 0.94911,5.010889 -0.015,1.658349 -0.35758,4.682054 -0.76125,6.719346 -1.49867,7.563594 -1.3651,9.576204 0.7654,11.532814 0.98915,0.90842 1.64012,1.17274 3.37032,1.36849 l 2.14439,0.24261 v 2.42387 2.42388 l -1.6757,7.1e-4 c -2.1517,7e-4 -3.9323,0.90924 -4.83869,2.46889 -0.95194,1.63803 -0.89239,5.20675 0.17364,10.40695 0.90648,4.421902 1.05253,8.458452 0.3882,10.728752 -0.70059,2.39406 -3.81995,5.29609 -6.74745,6.27718 -1.26118,0.42266 -2.96775,0.87096 -3.79236,0.99623 l -1.49931,0.22775 z"),D(u,"stroke-width","0.35277778"),l(f,"id","path4548"),l(f,"d","m 131.74239,108.26592 c -1.02163,-1.2988 -0.87294,-3.53652 0.38087,-5.73185 0.92776,-1.62446 4.80862,-6.948549 7.61066,-10.440949 l 1.13094,-1.40958 -1.80213,-5.22523 c -2.02147,-5.86123 -2.0098,-5.97467 0.65581,-6.37225 l 1.46834,-0.219 1.64076,3.3506 c 0.90242,1.84283 1.76982,3.35061 1.92755,3.35061 0.15774,0 1.77489,-1.75542 3.59368,-3.90092 3.15918,-3.72667 3.35688,-3.89165 4.42591,-3.69334 0.64552,0.11974 1.21858,0.0465 1.35432,-0.17316 0.31818,-0.51481 1.23083,0.24704 1.23083,1.02746 0,0.32009 -0.45438,1.13409 -1.00972,1.80888 -2.26771,2.75549 -7.10417,9.27155 -7.10417,9.5713 0,0.17685 0.97502,2.45302 2.16671,5.05816 l 2.1667,4.736609 -0.65823,0.98459 c -0.36203,0.54152 -0.66236,1.12603 -0.6674,1.29891 -0.005,0.17288 -0.27769,0.48371 -0.60588,0.69073 -0.83174,0.52464 -1.44656,-0.11541 -3.9894,-4.153119 -1.16417,-1.84856 -2.23163,-3.36491 -2.37215,-3.36967 -0.31309,-0.0106 -3.7911,5.131969 -6.47955,9.580639 -2.37093,3.92324 -1.93885,3.4204 -3.26614,3.80106 -0.95533,0.27398 -1.19348,0.19843 -1.79831,-0.57048 z"),D(f,"stroke-width","0.35277775"),l(y,"id","path4550"),l(y,"d","m 131.98567,83.677091 c -2.15148,-3.8472 -6.0183,-9.42829 -7.57842,-10.93815 -0.79252,-0.76698 -1.44094,-1.57494 -1.44094,-1.79546 0,-0.6016 1.61695,-1.21975 3.19058,-1.21975 1.69822,0 3.49597,1.47777 5.0997,4.19203 0.58208,0.98515 1.15641,1.79434 1.27629,1.79819 0.11988,0.004 0.80873,-1.65116 1.53078,-3.67779 1.5464,-4.34039 5.62351,-12.777999 7.22453,-14.951229 1.3726,-1.86316 3.42936,-2.865165 5.90274,-2.875676 3.23375,-0.01374 3.24268,0.130067 0.20474,3.296663 -4.63599,4.832327 -6.76321,8.809632 -11.25155,21.037252 -1.24637,3.39549 -2.39032,6.47895 -2.54212,6.85214 -0.23022,0.56597 -0.49833,0.28096 -1.61633,-1.71822 z"),D(y,"stroke-width","0.35277775"),l(a,"transform","translate(-104.22785,-45.507923)"),l(a,"id","layer1"),l(n,"version","1.1"),l(n,"viewBox","0 0 70.423268 70.42326"),l(n,"height","1.25em"),l(n,"class","svelte-27u907"),l(t,"href",e[0]),l(t,"class","svelte-27u907")},m(e,r){p(e,t,r),m(t,n),m(n,a),m(a,o),m(a,u),m(a,f),m(a,y),m(t,v),$&&$.m(t,null),g=!0},p(e,[n]){$&&$.p&&2&n&&M($,b,e,e[1],n,null,null),(!g||1&n)&&l(t,"href",e[0])},i(e){g||(A($,e),g=!0)},o(e){k($,e),g=!1},d(e){e&&c(t),$&&$.d(e)}}}function Fi(e,t,n){let{href:r=""}=t,{$$slots:a={},$$scope:i}=t;return e.$$set=e=>{"href"in e&&n(0,r=e.href),"$$scope"in e&&n(1,i=e.$$scope)},[r,i,a]}class zi extends e{constructor(e){super(),t(this,e,Fi,Ji,n,{href:0})}}function Bi(e){let t;return{c(){t=a("hyperjump-io/json-schema.hyperjump.io")},l(e){t=o(e,"hyperjump-io/json-schema.hyperjump.io")},m(e,n){p(e,t,n)},d(e){e&&c(t)}}}function Gi(e){let t;return{c(){t=a("hyperjump-io/json-schema-validator")},l(e){t=o(e,"hyperjump-io/json-schema-validator")},m(e,n){p(e,t,n)},d(e){e&&c(t)}}}function Xi(e){let t;return{c(){t=a("@hyperjump/json-schema")},l(e){t=o(e,"@hyperjump/json-schema")},m(e,n){p(e,t,n)},d(e){e&&c(t)}}}function Ui(e){let t;return{c(){t=a("@hyperjump/json-schema-core")},l(e){t=o(e,"@hyperjump/json-schema-core")},m(e,n){p(e,t,n)},d(e){e&&c(t)}}}function Ki(e){let t;return{c(){t=a("JSON Schema")},l(e){t=o(e,"JSON Schema")},m(e,n){p(e,t,n)},d(e){e&&c(t)}}}function Hi(e){let t,n,a,o,u,f,y,v,g,b,$,x,O,I,S,P,C;return o=new Di({props:{href:"https://github.com/hyperjump-io/json-schema.hyperjump.io",$$slots:{default:[Bi]},$$scope:{ctx:e}}}),y=new Di({props:{href:"https://github.com/hyperjump-io/json-schema-validator",$$slots:{default:[Gi]},$$scope:{ctx:e}}}),b=new _i({props:{href:"https://www.npmjs.com/package/@hyperjump/json-schema",$$slots:{default:[Xi]},$$scope:{ctx:e}}}),O=new _i({props:{href:"https://www.npmjs.com/package/@hyperjump/json-schema-core",$$slots:{default:[Ui]},$$scope:{ctx:e}}}),P=new zi({props:{href:"https://json-schema.org",$$slots:{default:[Ki]},$$scope:{ctx:e}}}),{c(){t=r("footer"),n=r("ul"),a=r("li"),E(o.$$.fragment),u=d(),f=r("li"),E(y.$$.fragment),v=d(),g=r("li"),E(b.$$.fragment),$=d(),x=r("li"),E(O.$$.fragment),I=d(),S=r("li"),E(P.$$.fragment),this.h()},l(e){t=i(e,"FOOTER",{class:!0});var r=s(t);n=i(r,"UL",{class:!0});var l=s(n);a=i(l,"LI",{class:!0});var p=s(a);w(o.$$.fragment,p),p.forEach(c),u=h(l),f=i(l,"LI",{class:!0});var m=s(f);w(y.$$.fragment,m),m.forEach(c),v=h(l),g=i(l,"LI",{class:!0});var d=s(g);w(b.$$.fragment,d),d.forEach(c),$=h(l),x=i(l,"LI",{class:!0});var E=s(x);w(O.$$.fragment,E),E.forEach(c),I=h(l),S=i(l,"LI",{class:!0});var j=s(S);w(P.$$.fragment,j),j.forEach(c),l.forEach(c),r.forEach(c),this.h()},h(){l(a,"class","svelte-17tbtsq"),l(f,"class","svelte-17tbtsq"),l(g,"class","svelte-17tbtsq"),l(x,"class","svelte-17tbtsq"),l(S,"class","svelte-17tbtsq"),l(n,"class","links svelte-17tbtsq"),l(t,"class","svelte-17tbtsq")},m(e,r){p(e,t,r),m(t,n),m(n,a),j(o,a,null),m(n,u),m(n,f),j(y,f,null),m(n,v),m(n,g),j(b,g,null),m(n,$),m(n,x),j(O,x,null),m(n,I),m(n,S),j(P,S,null),C=!0},p(e,[t]){const n={};1&t&&(n.$$scope={dirty:t,ctx:e}),o.$set(n);const r={};1&t&&(r.$$scope={dirty:t,ctx:e}),y.$set(r);const a={};1&t&&(a.$$scope={dirty:t,ctx:e}),b.$set(a);const i={};1&t&&(i.$$scope={dirty:t,ctx:e}),O.$set(i);const s={};1&t&&(s.$$scope={dirty:t,ctx:e}),P.$set(s)},i(e){C||(A(o.$$.fragment,e),A(y.$$.fragment,e),A(b.$$.fragment,e),A(O.$$.fragment,e),A(P.$$.fragment,e),C=!0)},o(e){k(o.$$.fragment,e),k(y.$$.fragment,e),k(b.$$.fragment,e),k(O.$$.fragment,e),k(P.$$.fragment,e),C=!1},d(e){e&&c(t),T(o),T(y),T(b),T(O),T(P)}}}class Wi extends e{constructor(e){super(),t(this,e,null,Hi,n,{})}}const{Core:Zi,Schema:Qi}=Tt;Qi.add(JSON.parse('{\n    "$id": "https://spec.openapis.org/oas/3.1/meta/schema-object",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/2019-09/vocab/core": true,\n        "https://json-schema.org/draft/2019-09/vocab/applicator": true,\n        "https://json-schema.org/draft/2019-09/vocab/validation": true,\n        "https://json-schema.org/draft/2019-09/vocab/meta-data": true,\n        "https://json-schema.org/draft/2019-09/vocab/format": false,\n        "https://json-schema.org/draft/2019-09/vocab/content": true,\n        "https://spec.openapis.org/oas/3.1/vocab/extensions": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Core and Validation specifications meta-schema",\n    "allOf": [\n        { "$ref": "https://json-schema.org/draft/2019-09/schema" },\n        { "$ref": "https://spec.openapis.org/oas/3.1/meta/extensions" }\n    ],\n    "type": ["object", "boolean"],\n    "unevaluatedProperties": false\n}')),Qi.add(JSON.parse('{\n    "$id": "https://spec.openapis.org/oas/3.1/meta/extensions",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n        "https://spec.openapis.org/oas/3.1/vocab/extensions": true\n    },\n    "$recursiveAnchor": true,\n\n    "type": ["object", "boolean"],\n    "properties": {\n        "example": true,\n        "discriminator": {\n            "$ref": "#/$defs/Discriminator"\n        },\n        "externalDocs": {\n            "$ref": "#/$defs/ExternalDocs"\n        },\n        "xml": {\n            "$ref": "#/$defs/Xml"\n        }\n    },\n    "patternProperties": {\n        "^x-": true\n    },\n    "$defs": {\n        "Discriminator": {\n            "type": "object",\n            "required": ["propertyName"],\n            "properties": {\n                "propertyName": {\n                    "type": "string"\n                },\n                "mapping": {\n                    "additionalProperties": {\n                        "type": "string"\n                    }\n                }\n            },\n            "additionalProperties": false\n        },\n        "ExternalDocs": {\n            "type": "object",\n            "required": ["url"],\n            "properties": {\n                "url": {\n                    "type": "string",\n                    "format": "uri-reference"\n                },\n                "description": {\n                    "type": "string"\n                }\n            },\n            "patternProperties": {\n                "^x-": true\n            },\n            "additionalProperties": false\n        },\n        "Xml": {\n            "type": "object",\n            "properties": {\n                "name": {\n                    "type": "string"\n                },\n                "namespace": {\n                    "type": "string",\n                    "format": "uri"\n                },\n                "prefix": {\n                    "type": "string"\n                },\n                "attribute": {\n                    "type": "boolean"\n                },\n                "wrapped": {\n                    "type": "boolean"\n                }\n            },\n            "patternProperties": {\n                "^x-": true\n            },\n            "additionalProperties": false\n        }\n    }\n}')),Zi.defineVocabulary("https://spec.openapis.org/oas/3.1/vocab/extensions",{discriminator:Ma.metaData,example:Ma.metaData,externalDocs:Ma.metaData,xml:Ma.metaData});const{Core:Yi,Schema:es}=Tt;es.add,es.get,Yi.validate,Yi.setMetaOutputFormat,Yi.setShouldMetaValidate,Yi.FLAG,Yi.BASIC,Yi.DETAILED,Yi.VERBOSE;const{Core:ts,Schema:ns,Instance:rs}=Tt;var as={compile:async(e,t,n)=>{const r=await ns.step("items",n),a=ns.typeOf(r,"array")?ns.length(r):Number.MAX_SAFE_INTEGER;return ns.typeOf(e,"boolean")?[a,ns.value(e)]:[a,await ts.compileSchema(e,t)]},interpret:([e,t],n,r)=>!rs.typeOf(n,"array")||("string"==typeof t?rs.every((n,a)=>a<e||ts.interpretSchema(t,n,r),n):rs.every((n,r)=>r<e||t,n))};const{Core:is,Schema:ss,Instance:os}=Tt,cs=([e,t],n,r)=>!os.typeOf(n,"array")||os.every((n,a)=>a<e||is.interpretSchema(t,n,r),n);var ls={compile:async(e,t,n)=>{const r=await ss.step("items",n);return[ss.typeOf(r,"array")?ss.length(r):Number.MAX_SAFE_INTEGER,await is.compileSchema(e,t)]},interpret:cs,collectEvaluatedItems:(e,t,n)=>cs(e,t,n)&&Number.MAX_SAFE_INTEGER};const{Core:ps,Schema:ms,Instance:us}=Tt;var fs={compile:async(e,t,n)=>{const r=await ms.step("properties",n),a=ms.typeOf(r,"object")?ms.keys(r):[],i=await ms.step("patternProperties",n),s=ms.typeOf(i,"object")?ms.keys(i).map(e=>new RegExp(e)):[];return ms.typeOf(e,"boolean")?[a,s,ms.value(e)]:[a,s,await ps.compileSchema(e,t)]},interpret:([e,t,n],r,a)=>{if(!us.typeOf(r,"object"))return!0;const i=us.entries(r).filter(([n])=>!e.includes(n)&&!t.some(e=>e.test(n)));return"string"==typeof n?i.every(([,e])=>ps.interpretSchema(n,e,a)):0===i.length||n}};const{Core:ds,Schema:hs,Instance:ys}=Tt,vs=([e,t,n],r,a)=>!ys.typeOf(r,"object")||ys.entries(r).filter(([n])=>!e.includes(n)&&!t.some(e=>e.test(n))).every(([,e])=>ds.interpretSchema(n,e,a));var gs={compile:async(e,t,n)=>{const r=await hs.step("properties",n),a=hs.typeOf(r,"object")?hs.keys(r):[],i=await hs.step("patternProperties",n);return[a,hs.typeOf(i,"object")?hs.keys(i).map(e=>new RegExp(e)):[],await ds.compileSchema(e,t)]},interpret:vs,collectEvaluatedProperties:(e,t,n)=>vs(e,t,n)&&[new RegExp("")]};const{Core:bs,Schema:$s}=Tt;var xs={compile:(e,t)=>Ve.pipeline([$s.map(async e=>bs.compileSchema(await e,t)),Ve.all],e),interpret:(e,t,n)=>e.every(e=>bs.interpretSchema(e,t,n)),collectEvaluatedProperties:(e,t,n)=>e.reduce((e,r)=>{const a=e&&bs.collectEvaluatedProperties(r,t,n);return a&&e.concat(a)},[]),collectEvaluatedItems:(e,t,n)=>e.reduce((e,r)=>{const a=!1!==e&&bs.collectEvaluatedItems(r,t,n);return!1!==a&&Math.max(e,a)},0)};const{Core:Os,Schema:Is}=Tt;var Ss={compile:(e,t)=>Ve.pipeline([Is.map(async e=>Os.compileSchema(await e,t)),Ve.all],e),interpret:(e,t,n)=>e.some(e=>Os.interpretSchema(e,t,n)),collectEvaluatedProperties:(e,t,n)=>e.reduce((e,r)=>{const a=Os.collectEvaluatedProperties(r,t,n);return a?(e||[]).concat(a):e},!1),collectEvaluatedItems:(e,t,n)=>e.reduce((e,r)=>{const a=Os.collectEvaluatedItems(r,t,n);return!1!==a?Math.max(e,a):e},!1)};const{Schema:Es,Instance:ws}=Tt;var js={compile:e=>an(Es.value(e)),interpret:(e,t)=>an(ws.value(t))===e};const{Core:Ps,Instance:As}=Tt;var ks={compile:(e,t)=>Ps.compileSchema(e,t),interpret:(e,t,n)=>!As.typeOf(t,"array")||As.some(t=>Ps.interpretSchema(e,t,n),t)};const{Core:Ts,Schema:Cs,Instance:Ns}=Tt;var Rs={compile:async(e,t,n)=>{const r=await Ts.compileSchema(e,t),a=await Cs.step("minContains",n),i=Cs.typeOf(a,"number")?Cs.value(a):1,s=await Cs.step("maxContains",n);return{contains:r,minContains:i,maxContains:Cs.typeOf(s,"number")?Cs.value(s):Number.MAX_SAFE_INTEGER}},interpret:({contains:e,minContains:t,maxContains:n},r,a)=>{if(!Ns.typeOf(r,"array"))return!0;const i=Ns.reduce((t,n)=>Ts.interpretSchema(e,n,a)?t+1:t,0,r);return i>=t&&i<=n}};const{Core:qs,Schema:Ms}=Tt;var Ds={compile:async(e,t)=>{await Ve.pipeline([Ms.entries,Ve.map(([,e])=>qs.compileSchema(e,t)),Ve.all],e)},interpret:()=>!0};const{Core:Vs,Schema:Ls,Instance:_s}=Tt;var Js={compile:(e,t)=>Ve.pipeline([Ls.entries,Ve.map(async([e,n])=>[e,Ls.typeOf(n,"array")?Ls.value(n):await Vs.compileSchema(n,t)]),Ve.all],e),interpret:(e,t,n)=>{const r=_s.value(t);return!_s.typeOf(t,"object")||e.every(([e,a])=>!(e in r)||(Array.isArray(a)?a.every(e=>e in r):Vs.interpretSchema(a,t,n)))}};const{Schema:Fs,Instance:zs}=Tt;var Bs={compile:e=>Ve.pipeline([Fs.entries,Ve.map(([e,t])=>[e,Fs.value(t)]),Ve.all],e),interpret:(e,t)=>{const n=zs.value(t);return!zs.typeOf(t,"object")||e.every(([e,t])=>!(e in n)||t.every(e=>e in n))}};const{Core:Gs,Schema:Xs,Instance:Us}=Tt;var Ks={compile:(e,t)=>Ve.pipeline([Xs.entries,Ve.map(async([e,n])=>[e,await Gs.compileSchema(n,t)]),Ve.all],e),interpret:(e,t,n)=>{const r=Us.value(t);return!Us.typeOf(t,"object")||e.every(([e,a])=>!(e in r)||Gs.interpretSchema(a,t,n))},collectEvaluatedProperties:(e,t,n)=>{const r=Us.value(t);return e.reduce((e,[a,i])=>{if(!e||!(a in r))return e;const s=Gs.collectEvaluatedProperties(i,t,n);return s&&e.concat(s)},[])}};const{Schema:Hs,Instance:Ws}=Tt;var Zs={compile:e=>Hs.value(e).map(an),interpret:(e,t)=>e.some(e=>an(Ws.value(t))===e)};const{Schema:Qs,Instance:Ys}=Tt;var eo={compile:async e=>Qs.value(e),interpret:(e,t)=>!Ys.typeOf(t,"number")||Ys.value(t)<e};const{Schema:to,Instance:no}=Tt;var ro={compile:async e=>to.value(e),interpret:(e,t)=>!no.typeOf(t,"number")||no.value(t)>e};const{Core:ao,Schema:io}=Tt;var so={compile:async(e,t,n)=>{const r={};if(r.if=await ao.compileSchema(e,t),io.has("then",n)){const e=await io.step("then",n);r.then=await ao.compileSchema(e,t)}if(io.has("else",n)){const e=await io.step("else",n);r.else=await ao.compileSchema(e,t)}return r},interpret:(e,t,n)=>ao.interpretSchema(e.if,t,n)?!("then"in e)||ao.interpretSchema(e.then,t,n):!("else"in e)||ao.interpretSchema(e.else,t,n),collectEvaluatedProperties:(e,t,n)=>{const r=ao.collectEvaluatedProperties(e.if,t,n),a=r?"then":"else";if(e[a]){const i=ao.collectEvaluatedProperties(e[a],t,n);return i&&(r||[]).concat(i)}return r||[]},collectEvaluatedItems:(e,t,n)=>{const r=ao.collectEvaluatedItems(e.if,t,n),a="number"==typeof r?"then":"else";if(e[a]){const i=ao.collectEvaluatedItems(e[a],t,n);return!1!==i&&Math.max(r,i)}return r||0}};const{Core:oo,Schema:co,Instance:lo}=Tt,po=(e,t,n)=>!lo.typeOf(t,"array")||("string"==typeof e?lo.every(t=>oo.interpretSchema(e,t,n),t):lo.every((t,r)=>!(r in e)||oo.interpretSchema(e[r],t,n),t));var mo={compile:(e,t)=>co.typeOf(e,"array")?Ve.pipeline([co.map(e=>oo.compileSchema(e,t)),Ve.all],e):oo.compileSchema(e,t),interpret:po,collectEvaluatedItems:(e,t,n)=>po(e,t,n)&&("string"==typeof e?Number.MAX_SAFE_INTEGER:e.length)};const{Core:uo,Schema:fo,Instance:ho}=Tt,yo=([e,t],n,r)=>!ho.typeOf(n,"array")||ho.every((n,a)=>a<e||uo.interpretSchema(t,n,r),n);var vo={compile:async(e,t,n)=>{const r=await fo.step("prefixItems",n);return[fo.typeOf(r,"array")?fo.length(r):0,await uo.compileSchema(e,t)]},interpret:yo,collectEvaluatedItems:(e,t,n)=>yo(e,t,n)&&Number.MAX_SAFE_INTEGER};const{Schema:go,Instance:bo}=Tt;var $o={compile:e=>go.value(e),interpret:(e,t)=>!bo.typeOf(t,"array")||bo.length(t)<=e};const{Schema:xo,Instance:Oo}=Tt;var Io={compile:e=>xo.value(e),interpret:(e,t)=>!Oo.typeOf(t,"string")||Oo.length(t)<=e};const{Schema:So,Instance:Eo}=Tt;var wo={compile:e=>So.value(e),interpret:(e,t)=>!Eo.typeOf(t,"string")||[...Eo.value(t)].length<=e};const{Schema:jo,Instance:Po}=Tt;var Ao={compile:e=>jo.value(e),interpret:(e,t)=>!Po.typeOf(t,"object")||Po.keys(t).length<=e};const{Schema:ko,Instance:To}=Tt;var Co={compile:async(e,t,n)=>{const r=await ko.step("exclusiveMaximum",n),a=ko.value(r);return[ko.value(e),a]},interpret:([e,t],n)=>{if(!To.typeOf(n,"number"))return!0;const r=To.value(n);return t?r<e:r<=e}};const{Schema:No,Instance:Ro}=Tt;var qo={compile:async e=>No.value(e),interpret:(e,t)=>!Ro.typeOf(t,"number")||Ro.value(t)<=e};const{Schema:Mo,Instance:Do}=Tt;var Vo={compile:e=>Mo.value(e),interpret:(e,t)=>!Do.typeOf(t,"array")||Do.length(t)>=e};const{Schema:Lo,Instance:_o}=Tt;var Jo={compile:e=>Lo.value(e),interpret:(e,t)=>!_o.typeOf(t,"string")||_o.value(t).length>=e};const{Schema:Fo,Instance:zo}=Tt;var Bo={compile:e=>Fo.value(e),interpret:(e,t)=>!zo.typeOf(t,"string")||[...zo.value(t)].length>=e};const{Schema:Go,Instance:Xo}=Tt;var Uo={compile:e=>Go.value(e),interpret:(e,t)=>{const n=Xo.value(t);return!Xo.typeOf(t,"object")||Object.keys(n).length>=e}};const{Schema:Ko,Instance:Ho}=Tt;var Wo={compile:async(e,t,n)=>{const r=await Ko.step("exclusiveMinimum",n),a=Ko.value(r);return[Ko.value(e),a]},interpret:([e,t],n)=>{if(!Ho.typeOf(n,"number"))return!0;const r=Ho.value(n);return t?r>e:r>=e}};const{Schema:Zo,Instance:Qo}=Tt;var Yo={compile:async e=>Zo.value(e),interpret:(e,t)=>!Qo.typeOf(t,"number")||Qo.value(t)>=e};const{Schema:ec,Instance:tc}=Tt,nc=(e,t)=>Math.abs(e-t)<1.1920929e-7;var rc={compile:e=>ec.value(e),interpret:(e,t)=>{if(!tc.typeOf(t,"number"))return!0;const n=tc.value(t)%e;return nc(0,n)||nc(e,n)}};const{Core:ac}=Tt;var ic={compile:ac.compileSchema,interpret:(e,t,n)=>!ac.interpretSchema(e,t,n)};const{Core:sc,Schema:oc}=Tt;var cc={compile:(e,t)=>Ve.pipeline([oc.map(async e=>sc.compileSchema(await e,t)),Ve.all],e),interpret:(e,t,n)=>{let r=0;for(const a of e)if(sc.interpretSchema(a,t,n)&&r++,r>1)break;return 1===r},collectEvaluatedProperties:(e,t,n)=>{let r=0;return e.reduce((e,a)=>{if(r>1)return!1;const i=sc.collectEvaluatedProperties(a,t,n);return i?0==r++&&i:e},!1)},collectEvaluatedItems:(e,t,n)=>{let r=0;return e.reduce((e,a)=>{if(r>1)return!1;const i=sc.collectEvaluatedItems(a,t,n);return"number"==typeof i?0==r++&&i:e},!1)}};const{Schema:lc,Instance:pc}=Tt;var mc={compile:e=>new RegExp(lc.value(e),"u"),interpret:(e,t)=>!pc.typeOf(t,"string")||e.test(pc.value(t))};const{Core:uc,Schema:fc,Instance:dc}=Tt,hc=(e,t,n)=>!dc.typeOf(t,"object")||e.every(([e,r])=>dc.entries(t).filter(([t])=>e.test(t)).every(([,e])=>uc.interpretSchema(r,e,n)));var yc={compile:(e,t)=>Ve.pipeline([fc.entries,Ve.map(async([e,n])=>[new RegExp(e,"u"),await uc.compileSchema(n,t)]),Ve.all],e),interpret:hc,collectEvaluatedProperties:(e,t,n)=>hc(e,t,n)&&e.map(([e])=>e)};var vc={isObject:e=>"object"==typeof e&&!Array.isArray(e)&&null!==e,escapeRegExp:e=>e.replace(/[.*+\-?^${}()|[\]\\]/g,"\\$&")};const{Core:gc,Schema:bc,Instance:$c}=Tt,{escapeRegExp:xc}=vc,Oc=(e,t,n)=>!$c.typeOf(t,"object")||$c.entries(t).filter(([t])=>t in e).every(([t,r])=>gc.interpretSchema(e[t],r,n));var Ic={compile:(e,t)=>Ve.pipeline([bc.entries,Ve.reduce(async(e,[n,r])=>(e[n]=await gc.compileSchema(r,t),e),Object.create(null))],e),interpret:Oc,collectEvaluatedProperties:(e,t,n)=>Oc(e,t,n)&&Object.keys(e).map(e=>new RegExp(`^${xc(e)}$`))};const{Core:Sc,Instance:Ec}=Tt;var wc={compile:(e,t)=>Sc.compileSchema(e,t),interpret:(e,t,n)=>!Ec.typeOf(t,"object")||Ec.keys(t).every(t=>Sc.interpretSchema(e,Ec.cons(t),n))};const{Core:jc}=Tt;var Pc={compile:jc.compileSchema,interpret:jc.interpretSchema,collectEvaluatedProperties:jc.collectEvaluatedProperties,collectEvaluatedItems:jc.collectEvaluatedItems};const{Core:Ac}=Tt;var kc={compile:Ac.compileSchema,interpret:Ac.interpretSchema,collectEvaluatedProperties:Ac.collectEvaluatedProperties,collectEvaluatedItems:Ac.collectEvaluatedItems};const{Schema:Tc,Instance:Cc}=Tt;var Nc={compile:e=>Tc.value(e),interpret:(e,t)=>!Cc.typeOf(t,"object")||e.every(e=>Cc.value(t).hasOwnProperty(e))};const{Core:Rc,Schema:qc,Instance:Mc}=Tt,Dc=(e,t,n)=>!Mc.typeOf(t,"array")||Mc.every((t,r)=>!(r in e)||Rc.interpretSchema(e[r],t,n),t);var Vc={compile:(e,t)=>Ve.pipeline([qc.map(e=>Rc.compileSchema(e,t)),Ve.all],e),interpret:Dc,collectEvaluatedItems:(e,t,n)=>Dc(e,t,n)&&e.length};const{Schema:Lc,Instance:_c}=Tt;var Jc={compile:e=>Lc.value(e),interpret:(e,t)=>"string"==typeof e?_c.typeOf(t,e):e.some(_c.typeOf(t))};const{Core:Fc,Schema:zc,Instance:Bc}=Tt,Gc=([e,t],n,r)=>{if(!Bc.typeOf(n,"array"))return!0;const a=Fc.collectEvaluatedItems(e,n,r,!0);return!1===a||Bc.filter((e,t)=>t>=a,n).every(e=>Fc.interpretSchema(t,e,r))};var Xc={compile:async(e,t,n)=>[zc.uri(n),await Fc.compileSchema(e,t)],interpret:Gc,collectEvaluatedItems:(e,t,n)=>Gc(e,t,n)&&Number.MAX_SAFE_INTEGER};const{Core:Uc,Schema:Kc,Instance:Hc}=Tt,Wc=([e,t],n,r)=>{if(!Hc.typeOf(n,"object"))return!0;const a=Uc.collectEvaluatedProperties(e,n,r,!0);return!a||Hc.entries(n).filter(([e])=>!a.some(t=>e.match(t))).every(([,e])=>Uc.interpretSchema(t,e,r))};var Zc={compile:async(e,t,n)=>[Kc.uri(n),await Uc.compileSchema(e,t)],interpret:Wc,collectEvaluatedProperties:(e,t,n)=>Wc(e,t,n)&&[new RegExp("")]};const{Schema:Qc,Instance:Yc}=Tt;var el={compile:e=>Qc.value(e),interpret:(e,t)=>{if(!Yc.typeOf(t,"array")||!1===e)return!0;const n=Yc.map(e=>an(Yc.value(e)),t);return new Set(n).size===n.length}};const{Keywords:tl}=Tt;var nl={additionalItems:as,additionalItems6:ls,additionalProperties:fs,additionalProperties6:gs,allOf:xs,anyOf:Ss,const:js,contains:ks,containsMinContainsMaxContains:Rs,definitions:Ds,dependencies:Js,dependentRequired:Bs,dependentSchemas:Ks,enum:Zs,exclusiveMaximum:eo,exclusiveMinimum:ro,ifThenElse:so,items:mo,items2020XX:vo,maxItems:$o,maxLength:Io,maxLength6:wo,maxProperties:Ao,maximumExclusiveMaximum:Co,maximum:qo,metaData:tl.metaData,minItems:Vo,minLength:Jo,minLength6:Bo,minProperties:Uo,minimumExclusiveMinimum:Wo,minimum:Yo,multipleOf:rc,not:ic,oneOf:cc,pattern:mc,patternProperties:yc,properties:Ic,propertyNames:wc,dynamicRef:Pc,ref:kc,required:Nc,tupleItems:Vc,type:Jc,unevaluatedItems:Xc,unevaluatedProperties:Zc,uniqueItems:el,validate:tl.validate};const{Core:rl,Schema:al}=Tt,il="https://json-schema.org/draft/future/schema";function sl(e){return{c:u,l:u,m:u,p:u,i:u,o:u,d:u}}function ol(e){let t,n;return t=new Ri({props:{results:e[4]}}),{c(){E(t.$$.fragment)},l(e){w(t.$$.fragment,e)},m(e,r){j(t,e,r),n=!0},p(e,n){const r={};16&n&&(r.results=e[4]),t.$set(r)},i(e){n||(A(t.$$.fragment,e),n=!0)},o(e){k(t.$$.fragment,e),n=!1},d(e){T(t,e)}}}function cl(e){return{c:u,l:u,m:u,p:u,i:u,o:u,d:u}}function ll(e){let t,n,u,f,y,v,g,b,$,O,I,C,R,q,M,D,L,_,J,F,z,B,G;function X(t){e[9].call(null,t)}function U(t){e[10].call(null,t)}g=new Ii({props:{ns:"schemas",tabs:e[0],newTab:e[5],active:0}}),g.$on("input",e[7]);let K={ns:"instances",tabs:e[1],newTab:e[6]};void 0!==e[2]&&(K.selected=e[2]),void 0!==e[2]&&(K.active=e[2]),O=new Ii({props:K}),x.push(()=>S(O,"selected",X)),x.push(()=>S(O,"active",U)),O.$on("input",e[8]),M=new Ri({props:{results:e[3]}});let H={ctx:e,current:null,token:null,pending:cl,then:ol,catch:sl,value:12,blocks:[,,,]};return N(J=e[3],H),B=new Wi({}),{c(){t=d(),n=r("main"),u=r("h1"),f=a("Hyperjump - JSON Schema Validator"),y=d(),v=r("div"),E(g.$$.fragment),b=d(),$=r("div"),E(O.$$.fragment),R=d(),q=r("div"),E(M.$$.fragment),L=d(),_=r("div"),H.block.c(),z=d(),E(B.$$.fragment),this.h()},l(e){V('[data-svelte="svelte-14138tz"]',document.head).forEach(c),t=h(e),n=i(e,"MAIN",{class:!0});var r=s(n);u=i(r,"H1",{class:!0});var a=s(u);f=o(a,"Hyperjump - JSON Schema Validator"),a.forEach(c),y=h(r),v=i(r,"DIV",{class:!0});var l=s(v);w(g.$$.fragment,l),l.forEach(c),b=h(r),$=i(r,"DIV",{class:!0});var p=s($);w(O.$$.fragment,p),p.forEach(c),R=h(r),q=i(r,"DIV",{class:!0});var m=s(q);w(M.$$.fragment,m),m.forEach(c),L=h(r),_=i(r,"DIV",{class:!0});var d=s(_);H.block.l(d),d.forEach(c),z=h(r),w(B.$$.fragment,r),r.forEach(c),this.h()},h(){document.title="Hyperjump - JSON Schema Validator",l(u,"class","svelte-1fbysc"),l(v,"class","editor-section svelte-1fbysc"),l($,"class","editor-section svelte-1fbysc"),l(q,"class",D="results "+ml+" svelte-1fbysc"),l(_,"class",F="results "+ml+" svelte-1fbysc"),l(n,"class","svelte-1fbysc")},m(e,r){p(e,t,r),p(e,n,r),m(n,u),m(u,f),m(n,y),m(n,v),j(g,v,null),m(n,b),m(n,$),j(O,$,null),m(n,R),m(n,q),j(M,q,null),m(n,L),m(n,_),H.block.m(_,H.anchor=null),H.mount=()=>_,H.anchor=null,m(n,z),j(B,n,null),G=!0},p(t,[n]){e=t;const r={};1&n&&(r.tabs=e[0]),g.$set(r);const a={};2&n&&(a.tabs=e[1]),!I&&4&n&&(I=!0,a.selected=e[2],P(()=>I=!1)),!C&&4&n&&(C=!0,a.active=e[2],P(()=>C=!1)),O.$set(a);const i={};if(8&n&&(i.results=e[3]),M.$set(i),H.ctx=e,8&n&&J!==(J=e[3])&&N(J,H));else{const t=e.slice();t[12]=H.resolved,H.block.p(t,n)}},i(e){G||(A(g.$$.fragment,e),A(O.$$.fragment,e),A(M.$$.fragment,e),A(H.block),A(B.$$.fragment,e),G=!0)},o(e){k(g.$$.fragment,e),k(O.$$.fragment,e),k(M.$$.fragment,e);for(let e=0;e<3;e+=1){const t=H.blocks[e];k(t)}k(B.$$.fragment,e),G=!1},d(e){e&&c(t),e&&c(n),T(g),T(O),T(M),H.block.d(),H.token=null,H=null,T(B)}}}al.setConfig(il,"baseToken","$id"),al.setConfig(il,"embeddedToken","$id"),al.setConfig(il,"anchorToken","$anchor"),al.setConfig(il,"jsrefToken","$ref"),al.setConfig(il,"dynamicJsrefToken","$dynamicRef"),al.setConfig(il,"dynamicAnchorToken","$dynamicAnchor"),al.setConfig(il,"commentToken","$comment"),al.setConfig(il,"vocabularyToken","$vocabulary"),al.setConfig(il,"mandatoryVocabularies",["https://json-schema.org/draft/future/vocab/core"]),al.add(JSON.parse('{\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$id": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/future/vocab/core": true,\n        "https://json-schema.org/draft/future/vocab/applicator": true,\n        "https://json-schema.org/draft/future/vocab/validation": true,\n        "https://json-schema.org/draft/future/vocab/meta-data": true,\n        "https://json-schema.org/draft/future/vocab/format": false,\n        "https://json-schema.org/draft/future/vocab/content": true\n    },\n    "$dynamicAnchor": "",\n\n    "title": "Core and Validation specifications meta-schema",\n    "allOf": [\n        {"$ref": "meta/core"},\n        {"$ref": "meta/applicator"},\n        {"$ref": "meta/validation"},\n        {"$ref": "meta/meta-data"},\n        {"$ref": "meta/format"},\n        {"$ref": "meta/content"}\n    ],\n    "type": ["object", "boolean"],\n    "properties": {\n        "definitions": {\n            "$comment": "While no longer an official keyword as it is replaced by $defs, this keyword is retained in the meta-schema to prevent incompatible extensions as it remains in common use.",\n            "type": "object",\n            "additionalProperties": { "$dynamicRef": "#" },\n            "default": {}\n        },\n        "dependencies": {\n            "$comment": "\\"dependencies\\" is no longer a keyword, but schema authors should avoid redefining it to facilitate a smooth transition to \\"dependentSchemas\\" and \\"dependentRequired\\"",\n            "type": "object",\n            "additionalProperties": {\n                "anyOf": [\n                    { "$dynamicRef": "#" },\n                    { "$ref": "meta/validation#/$defs/stringArray" }\n                ]\n            }\n        }\n    }\n}')),al.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/core",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/future/vocab/core": true\n    },\n    "$dynamicAnchor": "",\n\n    "title": "Core vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "$id": {\n            "type": "string",\n            "format": "uri-reference",\n            "$comment": "Non-empty fragments not allowed.",\n            "pattern": "^[^#]*#?$"\n        },\n        "$schema": {\n            "type": "string",\n            "format": "uri"\n        },\n        "$anchor": {\n            "type": "string",\n            "pattern": "^[A-Za-z][-A-Za-z0-9.:_]*$"\n        },\n        "$ref": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$dynamicRef": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$dynamicAnchor": {\n            "type": "boolean",\n            "const": true,\n            "default": false\n        },\n        "$vocabulary": {\n            "type": "object",\n            "propertyNames": {\n                "type": "string",\n                "format": "uri"\n            },\n            "additionalProperties": {\n                "type": "boolean"\n            }\n        },\n        "$comment": {\n            "type": "string"\n        },\n        "$defs": {\n            "type": "object",\n            "additionalProperties": { "$dynamicRef": "#" },\n            "default": {}\n        }\n    }\n}')),rl.defineVocabulary("https://json-schema.org/draft/future/vocab/core",{validate:nl.validate,$defs:nl.definitions,$dynamicRef:nl.dynamicRef,$ref:nl.ref}),al.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/applicator",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/future/vocab/applicator": true\n    },\n    "$dynamicAnchor": "",\n\n    "title": "Applicator vocabulary meta-schema",\n    "properties": {\n        "items": { "$dynamicRef": "#" },\n        "unevaluatedItems": { "$dynamicRef": "#" },\n        "prefixItems": { "$ref": "#/$defs/schemaArray" },\n        "contains": { "$dynamicRef": "#" },\n        "additionalProperties": { "$dynamicRef": "#" },\n        "unevaluatedProperties": { "$dynamicRef": "#" },\n        "properties": {\n            "type": "object",\n            "additionalProperties": { "$dynamicRef": "#" },\n            "default": {}\n        },\n        "patternProperties": {\n            "type": "object",\n            "additionalProperties": { "$dynamicRef": "#" },\n            "propertyNames": { "format": "regex" },\n            "default": {}\n        },\n        "dependentSchemas": {\n            "type": "object",\n            "additionalProperties": {\n                "$dynamicRef": "#"\n            }\n        },\n        "propertyNames": { "$dynamicRef": "#" },\n        "if": { "$dynamicRef": "#" },\n        "then": { "$dynamicRef": "#" },\n        "else": { "$dynamicRef": "#" },\n        "allOf": { "$ref": "#/$defs/schemaArray" },\n        "anyOf": { "$ref": "#/$defs/schemaArray" },\n        "oneOf": { "$ref": "#/$defs/schemaArray" },\n        "not": { "$dynamicRef": "#" }\n    },\n    "$defs": {\n        "schemaArray": {\n            "type": "array",\n            "minItems": 1,\n            "items": { "$dynamicRef": "#" }\n        }\n    }\n}')),rl.defineVocabulary("https://json-schema.org/draft/future/vocab/applicator",{additionalProperties:nl.additionalProperties6,allOf:nl.allOf,anyOf:nl.anyOf,contains:nl.containsMinContainsMaxContains,dependentSchemas:nl.dependentSchemas,if:nl.ifThenElse,items:nl.itemsFUTURE,not:nl.not,oneOf:nl.oneOf,patternProperties:nl.patternProperties,prefixItems:nl.tupleItems,properties:nl.properties,propertyNames:nl.propertyNames,unevaluatedItems:nl.unevaluatedItems,unevaluatedProperties:nl.unevaluatedProperties}),al.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/validation",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/future/vocab/validation": true\n    },\n    "$dynamicAnchor": "",\n\n    "title": "Validation vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "multipleOf": {\n            "type": "number",\n            "exclusiveMinimum": 0\n        },\n        "maximum": {\n            "type": "number"\n        },\n        "exclusiveMaximum": {\n            "type": ["number", "boolean"]\n        },\n        "minimum": {\n            "type": "number"\n        },\n        "exclusiveMinimum": {\n            "type": ["number", "boolean"]\n        },\n        "maxLength": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minLength": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "pattern": {\n            "type": "string",\n            "format": "regex"\n        },\n        "maxItems": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minItems": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "uniqueItems": {\n            "type": "boolean",\n            "default": false\n        },\n        "maxContains": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minContains": {\n            "$ref": "#/$defs/nonNegativeInteger",\n            "default": 1\n        },\n        "maxProperties": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minProperties": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "required": { "$ref": "#/$defs/stringArray" },\n        "dependentRequired": {\n            "type": "object",\n            "additionalProperties": {\n                "$ref": "#/$defs/stringArray"\n            }\n        },\n        "const": true,\n        "enum": {\n            "type": "array",\n            "items": true\n        },\n        "type": {\n            "anyOf": [\n                { "$ref": "#/$defs/simpleTypes" },\n                {\n                    "type": "array",\n                    "items": { "$ref": "#/$defs/simpleTypes" },\n                    "minItems": 1,\n                    "uniqueItems": true\n                }\n            ]\n        }\n    },\n    "allOf": [\n        {\n            "if": {\n                "properties": {\n                    "exclusiveMinimum": { "type": "boolean" }\n                },\n                "required": ["exclusiveMinimum"]\n            },\n            "then": {\n                "required": ["minimum"]\n            }\n        },\n        {\n            "if": {\n                "properties": {\n                    "exclusiveMaximum": { "type": "boolean" }\n                },\n                "required": ["exclusiveMaximum"]\n            },\n            "then": {\n                "required": ["maximum"]\n            }\n        }\n    ],\n    "$defs": {\n        "nonNegativeInteger": {\n            "type": "integer",\n            "minimum": 0\n        },\n        "nonNegativeIntegerDefault0": {\n            "$ref": "#/$defs/nonNegativeInteger",\n            "default": 0\n        },\n        "simpleTypes": {\n            "enum": [\n                "array",\n                "boolean",\n                "integer",\n                "null",\n                "number",\n                "object",\n                "string"\n            ]\n        },\n        "stringArray": {\n            "type": "array",\n            "items": { "type": "string" },\n            "uniqueItems": true,\n            "default": []\n        }\n    }\n}')),rl.defineVocabulary("https://json-schema.org/draft/future/vocab/validation",{const:nl.const,dependentRequired:nl.dependentRequired,enum:nl.enum,exclusiveMaximum:nl.exclusiveMaximum,exclusiveMinimum:nl.exclusiveMinimum,maxItems:nl.maxItems,maxLength:nl.maxLength6,maxProperties:nl.maxProperties,maximum:nl.maximum,minItems:nl.minItems,minLength:nl.minLength6,minProperties:nl.minProperties,minimum:nl.minimum,multipleOf:nl.multipleOf,pattern:nl.pattern,required:nl.required,type:nl.type,uniqueItems:nl.uniqueItems}),al.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/meta-data",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/future/vocab/meta-data": true\n    },\n    "$dynamicAnchor": "",\n\n    "title": "Meta-data vocabulary meta-schema",\n\n    "type": ["object", "boolean"],\n    "properties": {\n        "title": {\n            "type": "string"\n        },\n        "description": {\n            "type": "string"\n        },\n        "default": true,\n        "deprecated": {\n            "type": "boolean",\n            "default": false\n        },\n        "readOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "writeOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "examples": {\n            "type": "array",\n            "items": true\n        }\n    }\n}')),rl.defineVocabulary("https://json-schema.org/draft/future/vocab/meta-data",{default:nl.metaData,deprecated:nl.metaData,description:nl.metaData,examples:nl.metaData,readOnly:nl.metaData,title:nl.metaData,writeOnly:nl.metaData}),al.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/format",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/future/vocab/format": true\n    },\n    "$dynamicAnchor": "",\n\n    "title": "Format vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "format": { "type": "string" }\n    }\n}')),al.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/content",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/future/vocab/content": true\n    },\n    "$dynamicAnchor": "",\n\n    "title": "Content vocabulary meta-schema",\n\n    "type": ["object", "boolean"],\n    "properties": {\n        "contentMediaType": { "type": "string" },\n        "contentEncoding": { "type": "string" },\n        "contentSchema": { "$dynamicRef": "#" }\n    }\n}')),rl.defineVocabulary("https://json-schema.org/draft/future/vocab/content",{contentEncoding:nl.metaData,contentMediaType:nl.metaData,contentSchema:nl.metaData});const pl="https://json-schema.hyperjump.io/schema",ml="solarized-dark";function ul(e,t,n){const r=function(){let e=1;return(t,n,r=!1)=>{const a=n||`${pl}${++e}`;return{label:t||"Schema "+e,text:`{\n  "$id": "${a}",\n  "$schema": "https://json-schema.org/draft/2019-09/schema"\n}`,persistent:r}}}(),a=function(){let e=1;return()=>({label:"Instance "+e++,text:""})}();let i=[r("Schema",pl,!0)],s=[a("Instance")],o=0;const c=function(e,t){let n;return({detail:r})=>{clearTimeout(n),n=setTimeout(()=>e(r),t)}},l=c(e=>n(0,i=e),750),p=c(e=>n(1,s=e),750);let m,u;return Qa.setMetaOutputFormat(Qa.BASIC),e.$$.update=()=>{1&e.$$.dirty&&n(3,m=async function(){i.forEach((e,t)=>{const n=0===t?pl:"";Qa.add(JSON.parse(e.text||"true"),n,"https://json-schema.org/draft/2019-09/schema")});const e=await Qa.get(pl);return Qa.validate(e)}()),14&e.$$.dirty&&n(4,u=async function(){if(""!==s[o].text){let e;try{e=await m}catch(e){}if(e){const t=e(JSON.parse(s[o].text),Qa.BASIC);if(t.valid)return t;throw{output:t}}}}())},[i,s,o,m,u,r,a,l,p,function(e){o=e,n(2,o)},function(e){o=e,n(2,o)}]}export default class extends e{constructor(e){super(),t(this,e,ul,ll,n,{})}}
